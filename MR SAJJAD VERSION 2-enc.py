import base64
exec(base64.b64decode("IyBEZWNvbXBpbGUgYnkgOiBIYW1pZCBNZWVyJ2hhbWlpIAogCiMgVGltZSBTdWNjZXMgZGVjb21waWxlIDogMjAyMi0wMy0yNiAxNzo1NTozOS4zMjYyMjggCiAKaW1wb3J0IHRpbWUsb3MKIAp0cnk6CiAKICAgICAgICB0ZW1hID0gb3BlbigidGVtYS50eHQiLCJyIikucmVhZCgpCiAKZXhjZXB0IElPRXJyb3I6CiAKICAgICAgICB0ZW1hID0gImRlZmF1bHQiCiAKSCA9ICgnXHgxYlsxOzkwbScpCiAKTSA9ICgnXHgxYlsxOzkxbScpCiAKSCA9ICgnXHgxYlsxOzkybScpCiAKSyA9ICgnXHgxYlsxOzkzbScpCiAKVCA9ICgnXHgxYlsxOzk0bScpCiAKVSA9ICgnXHgxYlsxOzk1bScpCiAKQiA9ICgnXHgxYlsxOzk2bScpCiAKUCA9ICgnXHgxYlsxOzk3bScpCiAKQyA9ICgnXFgzM1szNjsxbScpIAkJCiAKaWYgImRlZmF1bHQiIGluIHRlbWE6CiAKICAgICAgICBwID0gIlwzM1sxOzk3bSIgIyBwdXRpaAogCiAgICAgICAgbCA9ICJcMzNbMDszN20iICMgcHV0aWggZ2VsYXAKIAogICAgICAgIG0gPSAiXDMzWzE7MzFtIiAjIG1lcmFoCiAKICAgICAgICBoID0gIlwzM1sxOzkybSIgIyBoaWphdQogCiAgICAgICAgayA9ICJcMzNbMTs5M20iICMga3VuaW5nCiAKICAgICAgICBiID0gIlwzM1sxOzk0bSIgIyBiaXJ1CiAKICAgICAgICB1ID0gIlwzM1sxOzk1bSIgIyB1bmd1CiAKICAgICAgICBzID0gIlwzM1sxOzk2bSIgIyBiaXJ1IG11ZGEKIAplbGlmICJiaXJ1IiBpbiB0ZW1hOgogCiAgICAgICAgcCA9ICJcMzNbMTs5N20iICMgcHV0aWgKIAogICAgICAgIGwgPSAiXDMzWzA7MzdtIiAjIHB1dGloIGdlbGFwCiAKICAgICAgICBrID0gIlwzM1sxOzMxbSIgIyBtZXJhaAogCiAgICAgICAgbSA9ICJcMzNbMTs5Mm0iICMgaGlqYXUKIAogICAgICAgIHUgPSAiXDMzWzE7OTNtIiAjIGt1bmluZwogCiAgICAgICAgaCA9ICJcMzNbMTs5NG0iICMgYmlydQogCiAgICAgICAgYiA9ICJcMzNbMTs5NW0iICMgdW5ndQogCiAgICAgICAgcyA9ICJcMzNbMTs5Nm0iICMgYmlydSBtdWRhCiAKZWxpZiAibWVyYWgiIGluIHRlbWE6CiAKICAgICAgICBwID0gIlwzM1sxOzk3bSIgIyBwdXRpaAogCiAgICAgICAgbCA9ICJcMzNbMDszN20iICMgcHV0aWggZ2VsYXAKIAogICAgICAgIGggPSAiXDMzWzE7MzFtIiAjIG1lcmFoCiAKICAgICAgICBtID0gIlwzM1sxOzkybSIgIyBoaWphdQogCiAgICAgICAgcyA9ICJcMzNbMTs5M20iICMga3VuaW5nCiAKICAgICAgICBrID0gIlwzM1sxOzk0bSIgIyBiaXJ1CiAKICAgICAgICBiID0gIlwzM1sxOzk1bSIgIyB1bmd1CiAKICAgICAgICB1ID0gIlwzM1sxOzk2bSIgIyBiaXJ1IG11ZGEKIAplbGlmICJrdW5pbmciIGluIHRlbWE6CiAKICAgICAgICBwID0gIlwzM1sxOzk3bSIgIyBwdXRpaAogCiAgICAgICAgbCA9ICJcMzNbMDszN20iICMgcHV0aWggZ2VsYXAKIAogICAgICAgIG0gPSAiXDMzWzE7MzFtIiAjIG1lcmFoCiAKICAgICAgICBrID0gIlwzM1sxOzkybSIgIyBoaWphdQogCiAgICAgICAgaCA9ICJcMzNbMTs5M20iICMga3VuaW5nCiAKICAgICAgICB1ID0gIlwzM1sxOzk0bSIgIyBiaXJ1CiAKICAgICAgICBiID0gIlwzM1sxOzk1bSIgIyB1bmd1CiAKICAgICAgICBzID0gIlwzM1sxOzk2bSIgIyBiaXJ1IG11ZGEKIApiYWxtb25kID0gcysiPiIrbSsiPjwiK3MrIjwiCiAKdHJ5OgogCglpbXBvcnQgY29uY3VycmVudC5mdXR1cmVzCiAKZXhjZXB0IEltcG9ydEVycm9yOgogCglvcy5zeXN0ZW0oImNsZWFyIikKIAoJcHJpbnQoIlxuIitiYWxtb25kK20rIiBNb2R1bGUgRnV0dXJlcyBCZWx1bSBUZXJpbnN0YWxsLCBKYWxhbmthbiBwaXAgaW5zdGFsbCBmdXR1cmVzIikKIAoJdGltZS5zbGVlcCgwLjUpCiAKCWV4aXQoKQogCnRyeToKIAoJaW1wb3J0IHJlcXVlc3RzCiAKZXhjZXB0IEltcG9ydEVycm9yOgogCglvcy5zeXN0ZW0oImNsZWFyIikKIAoJcHJpbnQoIlxuIitiYWxtb25kK20rIiBNb2R1bGUgUmVxdWVzdHMgQmVsdW0gVGVyaW5zdGFsbCwgSmFsYW5rYW4gcGlwIGluc3RhbGwgcmVxdWVzdHMiKQogCgl0aW1lLnNsZWVwKDAuNSkKIAoJZXhpdCgpCiAKdHJ5OgogCglpbXBvcnQgYnM0CiAKZXhjZXB0IEltcG9ydEVycm9yOgogCglvcy5zeXN0ZW0oImNsZWFyIikKIAoJcHJpbnQoIlxuIitiYWxtb25kK20rIiBNb2R1bGUgQnM0IEJlbHVtIFRlcmluc3RhbGwsIEphbGFua2FuIHBpcCBpbnN0YWxsIGJzNCIpCiAKCXRpbWUuc2xlZXAoMC41KQogCglleGl0KCkKIAp0cnk6CiAKCWltcG9ydCBtZWNoYW5pemUKIApleGNlcHQgSW1wb3J0RXJyb3I6CiAKCW9zLnN5c3RlbSgiY2xlYXIiKQogCglwcmludCgiXG4iK2JhbG1vbmQrbSsiIE1vZHVsZSBNZWNoYW5pemUgQmVsdW0gVGVyaW5zdGFsbCwgSmFsYW5rYW4gcGlwIGluc3RhbGwgbWVjaGFuaXplIikKIAoJdGltZS5zbGVlcCgwLjUpCiAKCWV4aXQoKQogCmltcG9ydCBjb25jdXJyZW50LmZ1dHVyZXMsIHJlcXVlc3RzLCBiczQsIG1lY2hhbml6ZSwgc3lzLCByYW5kb20sIGpzb24sIHJlLCBpcGFkZHJlc3MsIGNhbGVuZGFyCiAKZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAKIApmcm9tIGJzNCBpbXBvcnQgQmVhdXRpZnVsU291cCBhcyBwYXJzZXIKIApmcm9tIGNvbmN1cnJlbnQuZnV0dXJlcyBpbXBvcnQgVGhyZWFkUG9vbEV4ZWN1dG9yCiAKZnJvbSByYW5kb20gaW1wb3J0IHJhbmRpbnQKIApmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQogCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGUKIApvayA9IFtdCiAKY3AgPSBbXQogCmlkID0gW10KIApvcHNpdCA9IFtdCiAKc2FuZGkgPSBbXQogCmJhdGFzID0gIn4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIgogCmxpbmUgPSAiX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18qIgogCmluZGFoID0gWyJKaWhhbiIsIkphbnVhcmkiLCJGZWJydWFyaSIsIk1hcmV0IiwiQXByaWwiLCJNZWkiLCJKdW5pIiwiSnVsaSIsIkFndXN0dXMiLCJTZXB0ZW1iZXIiLCJPa3RvYmVyIiwiTm92ZW1iZXIiLCJEZXNlbWJlciJdCiAKa2FtdSA9IGRhdGV0aW1lLm5vdygpCiAKY2FudGlrcyA9IGthbXUuZGF5CiAKaW11dHMgPSBrYW11Lm1vbnRoCiAKZ2VtZXNzID0ga2FtdS55ZWFyCiAKc2F5YW5ncyA9IGluZGFoW2ltdXRzXQogCm1hbnl1biA9IGRhdGUudG9kYXkoKQogCm5hbWFfaCA9IGNhbGVuZGFyLmRheV9uYW1lW21hbnl1bi53ZWVrZGF5KCldCiAKaWYgbmFtYV9oPT0iU3VuZGF5IjoKIAoJbmFtYV9oYXJpID0gIk1pbmdndSIKIAplbGlmIG5hbWFfaD09Ik1vbmRheSI6CiAKCW5hbWFfaGFyaSA9ICJTZW5pbiIKIAplbGlmIG5hbWFfaD09IlR1ZXNkYXkiOgogCgluYW1hX2hhcmkgPSAiU2VsYXNhIgogCmVsaWYgbmFtYV9oPT0iV2VkbmVzZGF5IjoKIAoJbmFtYV9oYXJpID0gIlJhYnUiCiAKZWxpZiBuYW1hX2g9PSJUaHVyc2RheSI6CiAKCW5hbWFfaGFyaSA9ICJLYW1pcyIKIAplbGlmIG5hbWFfaD09IkZyaWRheSI6CiAKCW5hbWFfaGFyaSA9ICJKdW1hdCIKIAplbGlmIG5hbWFfaD09IlNhdHVyZGF5IjoKIAoJbmFtYV9oYXJpID0gIlNhYnR1IgogCmhjayA9ICIlcy0lcy0lcy0lcyIlKG5hbWFfaGFyaSxjYW50aWtzLHNheWFuZ3MsZ2VtZXNzKQogCnNlbW9nYSA9IFtdCiAKYmVyYXBhX2QgPSBbXQogCmpvaW5lZF95ZWFyID0gWyJ7MjAwNCAtIDIwMDV9IiwiezIwMDUgLSAyMDA2fSIsInsyMDA2IC0gMjAwN30iLCJ7MjAwNyAtIDIwMDh9IiwiezIwMDh9IiwiezIwMDkgLSAyMDEwfSJdCiAKb2xkX2dhayA9IFtdCiAKcmFuZG9tX2dhayA9IFtdCiAKdHJ5OgogCglqaWhhbiA9IG9wZW4oInRva2VuLnR4dCIsInIiKS5yZWFkKCkKIApleGNlcHQgSU9FcnJvcjoKIAoJcGFzcwogCnRyeToKIAoJa2Fsb19yYW5kb20gPSBvcGVuKCJ1cmVuIiwiciIpLnJlYWRsaW5lcygpCiAKZXhjZXB0IElPRXJyb3I6CiAKCWthbG9fcmFuZG9tID0gWydNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IHZpdm8gMTkzNSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzkzLjAuNDU3Ny44MiBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNS4xLjE7IEYxZiBCdWlsZC9MTVk0N1YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81Ni4wLjI5MjQuODcgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDk7IHZpdm8gMTkwMSBCdWlsZC9QUFIxLjE4MDYxMC4wMTE7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNjIuMC4zMjAyLjg0IE1vYmlsZSBTYWZhcmkvNTM3LjM2IFZpdm9Ccm93c2VyLzYuOS4xMC4yXHQgJywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA4LjEuMDsgZW4tVVM7IENQSDE4MDMgQnVpbGQvT1BNMS4xNzEwMTkuMDI2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNTcuMC4yOTg3LjEwOCBVQ0Jyb3dzZXIvMTMuMi41LjEzMDAgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDYuMDsgQ1BIMTYwOSBCdWlsZC9NUkE1OEspIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82NC4wLjMyODIuMTM3IE1vYmlsZSBTYWZhcmkvNTM3LjM2IG1DZW50LzAuMTMuMTIxNCcsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNS4xLjE7IEEzN2Z3IEJ1aWxkL0xNWTQ3VikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzY4LjAuMzQ0MC45MSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNy4xLjE7IENQSDE3MTcgQnVpbGQvTjRGMjZNOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzgzLjAuNDEwMy45NiBNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvNTAuMC4yMjU0LjE0OTE4MicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOC4xLjA7IENQSDE4MDMgQnVpbGQvT1BNMS4xNzEwMTkuMDI2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODUuMC40MTgzLjEwMSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNy4xLjE7IENQSDE4MDEgQnVpbGQvTk1GMjZGKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNjcuMC4zMzk2LjY4IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA4LjEuMDsgZW4tdXM7IENQSDE4MTkgQnVpbGQvTzExMDE5KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzcuMC4zODY1LjExNiBNb2JpbGUgU2FmYXJpLzUzNy4zNiBIZXlUYXBCcm93c2VyLzE1LjcuOC4xJywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA3LjEuMTsgQ1BIMTcyMyBCdWlsZC9ONkYyNlEpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82NC4wLjMyODIuMTIzIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA1LjEuMTsgQTMzZncgQnVpbGQvTE1ZNDdWOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg1LjAuNDE4My44MSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNy4xLjE7IHpoLUNOOyBPUFBPIFIxMSBCdWlsZC9OTUYyNlgpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS81Ny4wLjI5ODcuMTA4IFVDQnJvd3Nlci8xMi4xLjQuOTk0IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA1LjE7IGluLUlEOyBBMTYwMSBCdWlsZC9MTVk0N0kpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS81Ny4wLjI5ODcuMTA4IFVDQnJvd3Nlci8xMi4xMC4wLjExNjMgVUNUdXJiby8xLjkuOC45MDAgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDk7IHZpdm8gMTkwNiBCdWlsZC9QS1ExLjE5MDYxNi4wMDE7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNjIuMC4zMjAyLjg0IE1vYmlsZSBTYWZhcmkvNTM3LjM2IFZpdm9Ccm93c2VyLzYuMy42LjJcdCAnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDUuMS4xOyBBMzdmIEJ1aWxkL0xNWTQ3Vjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84MC4wLjM5ODcuMTMyIE1vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi81Mi4yLjIyNTQuNTQ3MjMnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBWMjAzMjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82Mi4wLjMyMDIuODQgTW9iaWxlIFNhZmFyaS81MzcuMzYgVml2b0Jyb3dzZXIvNi4wLjQuMlx0ICcsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNS4xLjE7IEEzN2YgQnVpbGQvTE1ZNDdWOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzgzLjAuNDEwMy4xMDYgTW9iaWxlIFNhZmFyaS81MzcuMzYgT1BSLzUxLjAuMjI1NC4xNTA4MDcnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDcuMS4xOyBlbi11czsgQ1BIMTcyOSBCdWlsZC9ONkYyNlEpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS83MC4wLjM1MzguODAgTW9iaWxlIFNhZmFyaS81MzcuMzYgT3Bwb0Jyb3dzZXIvMTUuNi4zLjInLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDguMS4wOyBDUEgxODAzIEJ1aWxkL09QTTEuMTcxMDE5LjAyNjsgcnYpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIFJvY2tldC8yLjUuMSgyMDQ2MCkgQ2hyb21lLzc5LjAuMzk0NS4xMzYgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDguMS4wOyBlbi1VUzsgQ1BIMTgwMyBCdWlsZC9PUE0xLjE3MTAxOS4wMjYpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS83OC4wLjM5MDQuMTA4IFVDQnJvd3Nlci8xMy4zLjIuMTMwMyBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOC4xLjA7IENQSDE4MDMgQnVpbGQvT1BNMS4xNzEwMTkuMDI2OyBydikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgUm9ja2V0LzIuNS4xKDIwNDYwKSBDaHJvbWUvNzkuMC4zOTQ1LjEzNiBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNS4xOyBBMTYwMSBCdWlsZC9MTVk0N0kpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82OS4wLjM0OTcuMTAwIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA1LjEuMTsgQTM3ZiBCdWlsZC9MTVk0N1Y7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNDYuMC4yNDkwLjc2IE1vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi80Ny4xLjIyNTQuMTQ3NTI4JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA1LjEuMTsgQTM3ZiBCdWlsZC9MTVk0N1Y7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvODYuMC40MjQwLjExMCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvNTIuMS4yMjU0LjU0Mjk4JywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA4LjEuMDsgQ1BIMTgwMyBCdWlsZC9PUE0xLjE3MTAxOS4wMjYpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84My4wLjQxMDMuMTA2IE1vYmlsZSBTYWZhcmkvNTM3LjM2IFlhQXBwX0FuZHJvaWQvMTEuMDEgWWFTZWFyY2hCcm93c2VyLzExLjAxJywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA1LjE7IHpoLWNuOyBPUFBPIEE1OW0gQnVpbGQvTE1ZNDdJKSBBcHBsZVdlYktpdC81MzQuMzAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBVQ0Jyb3dzZXIvMS4wLjAuMTAwIFUzLzAuOC4wIE1vYmlsZSBTYWZhcmkvNTM0LjMwIEFsaUFwcChUQi82LjYuMikgV2luZFZhbmUvOC4wLjAgNzIwWDEyODAgR0NhbnZhcy8xLjQuMi4yMScsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNS4xLjE7IEEzN2YgQnVpbGQvTE1ZNDdWOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzQ2LjAuMjQ5MC43NiBNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvMzMuMC4yMjU0LjEyNTY3MicsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgOC4xLjA7IGluLWlkOyBDUEgxODAzIEJ1aWxkL09QTTEuMTcxMDE5LjAyNikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzc3LjAuMzg2NS4xMTYgTW9iaWxlIFNhZmFyaS81MzcuMzYgSGV5VGFwQnJvd3Nlci8xNS43LjguMC4zYmV0YScsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNi4wLjE7IGVuLVVTOyBDUEgxNzAxIEJ1aWxkL01NQjI5TSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzc4LjAuMzkwNC4xMDggVUNCcm93c2VyLzEzLjMuNS4xMzA0IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA2LjAuMTsgQ1BIMTcwMSBCdWlsZC9NTUIyOU0pIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81NS4wLjI4ODMuOTEgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDcuMS4xOyBlbi11czsgQ1BIMTcyOSBCdWlsZC9ONkYyNlEpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS83MC4wLjM1MzguODAgTW9iaWxlIFNhZmFyaS81MzcuMzYgT3Bwb0Jyb3dzZXIvMTUuNi4zLjInLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDUuMTsgZW4tVVM7IEExNjAxIEJ1aWxkL0xNWTQ3SSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzc4LjAuMzkwNC4xMDggVUNCcm93c2VyLzEzLjMuNS4xMzA0IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA1LjEuMTsgQTM3ZiBCdWlsZC9MTVk0N1YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82OS4wLjM0OTcuOTEgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDUuMTsgQTE2MDEgQnVpbGQvTE1ZNDdJKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODUuMC40MTgzLjEyNyBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNy4xLjE7IENQSDE3MjkgQnVpbGQvTjZGMjZRKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzkuMC4zOTQ1LjEzNiBNb2JpbGUgU2FmYXJpLzUzNy4zNiBZYUFwcF9BbmRyb2lkLzkuOTkgWWFTZWFyY2hCcm93c2VyLzkuOTknLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDUuMTsgQTE2MDEgQnVpbGQvTE1ZNDdJKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODQuMC40MTQ3LjEyNSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNS4xOyBlbi1VUzsgQTE2MDEgQnVpbGQvTE1ZNDdJKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNzguMC4zOTA0LjEwOCBVQ0Jyb3dzZXIvMTMuMy44LjEzMDUgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDcuMS4xOyBDUEgxNzI5IEJ1aWxkL042RjI2USkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgxLjAuNDA0NC45NiBNb2JpbGUgU2FmYXJpLzUzNy4zNiBZYUFwcF9BbmRyb2lkLzExLjAxIFlhU2VhcmNoQnJvd3Nlci8xMS4wMScsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNy4xLjE7IENQSDE3MTcgQnVpbGQvTjRGMjZNOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg3LjAuNDI4MC4xMDEgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDguMS4wOyBDUEgxODAzIEJ1aWxkL09QTTEuMTcxMDE5LjAyNikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzc5LjAuMzk0NS45MyBNb2JpbGUgU2FmYXJpLzUzNy4zNiBZYUFwcF9BbmRyb2lkLzkuNzUgWWFTZWFyY2hCcm93c2VyLzkuNzUnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDUuMS4xOyBBMzdmIEJ1aWxkL0xNWTQ3Vjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84Ni4wLjQyNDAuMTEwIE1vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi81MS4wLjIyNTQuMTUwODA3JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA3LjEuMTsgZW4tZ2I7IENQSDE3MjcgQnVpbGQvTjZGMjZRKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNTMuMC4yNzg1LjEzNCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBPcHBvQnJvd3Nlci8xNS41LjEuMTAnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDUuMS4xOyBBMzdmIEJ1aWxkL0xNWTQ3Vjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS83My4wLjM2ODMuOTAgTW9iaWxlIFNhZmFyaS81MzcuMzYgT1BSLzM1LjMuMjI1NC4xMjkyMjYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDguMS4wOyBpZC1JRDsgQ1BIMTgwMyBCdWlsZC9PUE0xLjE3MTAxOS4wMjYpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS81Ny4wLjI5ODcuMTA4IFVDQnJvd3Nlci8xMi4xMC4wLjExNjMgVUNUdXJiby8xLjEwLjMuOTAwIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA2LjAuMTsgZW4tVVM7IENQSDE3MDEgQnVpbGQvTU1CMjlNKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNTcuMC4yOTg3LjEwOCBVQ0Jyb3dzZXIvMTIuMTMuNS4xMjA5IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA3LjEuMTsgQ1BIMTcyOSBCdWlsZC9ONkYyNlE7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvODYuMC40MjQwLjk5IE1vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi81MS4wLjIyNTQuMTUwODA3JywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA2LjA7IENQSDE2MDkgQnVpbGQvTVJBNThLOyBpbi1pZCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzc5LjAuMzk0NS4xMzYgTW9iaWxlIFNhZmFyaS81MzcuMzYgUHVmZmluLzkuMC4wLjUwMjYzQVAnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDk7IHZpdm8gMTkwNCBCdWlsZC9QUFIxLjE4MDYxMC4wMTE7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNjIuMC4zMjAyLjg0IE1vYmlsZSBTYWZhcmkvNTM3LjM2IFZpdm9Ccm93c2VyLzYuMy42LjJcdCAnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDUuMTsgZW4tVVM7IEExNjAxIEJ1aWxkL0xNWTQ3SSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzU3LjAuMjk4Ny4xMDggVUNCcm93c2VyLzEzLjIuOC4xMzAxIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA1LjEuMTsgQTMzZncgQnVpbGQvTE1ZNDdWOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzQzLjAuMjM1Ny4xMjEgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDUuMTsgZW4tVVM7IEExNjAxIEJ1aWxkL0xNWTQ3SSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzU3LjAuMjk4Ny4xMDggVUNCcm93c2VyLzEzLjAuMC4xMjg4IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA1LjE7IEEzN2YgQnVpbGQvTE1ZNDdWKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNDMuMC4yMzU3LjkzIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA3LjEuMTsgemgtQ047IE9QUE8gUjExIEJ1aWxkL05NRjI2WCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzU3LjAuMjk4Ny4xMDggVUNCcm93c2VyLzEyLjEuMS45OTEgTW9iaWxlIFNhZmFyaS81MzcuMzZOVUxMJywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA3LjEuMTsgZW4tVVM7IENQSDE3MTcgQnVpbGQvTjRGMjZNKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNTcuMC4yOTg3LjEwOCBVQ0Jyb3dzZXIvMTMuMC4wLjEyODggTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDguMS4wOyBJbmZpbml4IFg1NTE1RiBCdWlsZC9PMTEwMTkpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82OC4wLjM0NDAuOTEgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDguMS4wOyBDUEgxODAzIEJ1aWxkL09QTTEuMTcxMDE5LjAyNikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzY5LjAuMzQ5Ny44NiBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNS4xLjE7IEEzN2YgQnVpbGQvTE1ZNDdWOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg3LjAuNDI4MC42NiBNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvNTIuMS4yMjU0LjU0Mjk4JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA4LjEuMDsgZW47IENQSDE4MDMgQnVpbGQvT1BNMS4xNzEwMTkuMDI2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNTcuMC4yOTg3LjEwOCBVQ0Jyb3dzZXIvMTIuMTAuMC4xMTYzIFVDVHVyYm8vMS4xMC4zLjkwMCBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOC4xLjA7IENQSDE4MDMgQnVpbGQvT1BNMS4xNzEwMTkuMDI2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODguMC40MzI0LjE0MSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNy4xLjE7IENQSDE3MjMgQnVpbGQvTjZGMjZRKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNjQuMC4zMjgyLjEyMyBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNS4xLjE7IEEzN2YgQnVpbGQvTE1ZNDdWOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg1LjAuNDE4My44MSBNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvNTAuMC4yMjU0LjE0OTE4MicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNy4xLjE7IENQSDE4MDEgQnVpbGQvTk1GMjZGKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNjkuMC4zNDk3LjkxIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA4LjEuMDsgQ1BIMTgwMyBCdWlsZC9PUE0xLjE3MTAxOS4wMjY7IGluLWlkKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNjkuMC4zNDk3LjEwMCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBQdWZmaW4vOC40LjAuNDIwODFBUCcsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNS4xLjE7IEEzN2YgQnVpbGQvTE1ZNDdWKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNjYuMC4zMzU5LjE1OCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvNDcuMS4yMjQ5LjEyOTMyNicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTE7IFYyMDM2OyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzYyLjAuMzIwMi44NCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBWaXZvQnJvd3Nlci82LjkuNC40XHQgJywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA2LjAuMTsgdml2byAxNjEwIEJ1aWxkL01NQjI5TSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzYwLjAuMzExMi4xMDcgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDguMS4wOyBDUEgxODAzIEJ1aWxkL09QTTEuMTcxMDE5LjAyNikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzg0LjAuNDE0Ny44OSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOC4xLjA7IENQSDE4MDMgQnVpbGQvT1BNMS4xNzEwMTkuMDI2OyBpbi1pZCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzY5LjAuMzQ5Ny4xMDAgTW9iaWxlIFNhZmFyaS81MzcuMzYgUHVmZmluLzguMy4xLjQxNjI0QVAnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDUuMTsgQTE2MDEgQnVpbGQvTE1ZNDdJOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzgwLjAuMzk4Ny4xNDkgTW9iaWxlIFNhZmFyaS81MzcuMzYgT1BSLzUxLjAuMjI1NC4xNTA4MDcnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDYuMDsgbXMtTVk7IHZpdm8gMTYwOSBCdWlsZC9NUkE1OEspIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS81Ny4wLjI5ODcuMTA4IFVDQnJvd3Nlci8xMi4xMC4wLjExNjMgVUNUdXJiby8xLjEwLjMuOTAwIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA4LjEuMDsgdml2byAxODIwIEJ1aWxkL08xMTAxOTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82Mi4wLjMyMDIuODQgTW9iaWxlIFNhZmFyaS81MzcuMzYgVml2b0Jyb3dzZXIvNy40LjAuMFx0ICcsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNy4xLjE7IGVuLWdiOyBDUEgxNzI3IEJ1aWxkL042RjI2USkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzUzLjAuMjc4NS4xMzQgTW9iaWxlIFNhZmFyaS81MzcuMzYgT3Bwb0Jyb3dzZXIvMTUuNS4xLjEwJywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA1LjEuMTsgZW4tVVM7IEEzN2YgQnVpbGQvTE1ZNDdWKSBBcHBsZVdlYktpdC81MzQuMzAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBVQ0Jyb3dzZXIvMTEuMC4wLjgyOCBVMy8wLjguMCBNb2JpbGUgU2FmYXJpLzUzNC4zMCcsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNS4xOyB6aC1jbjsgT1BQTyBBNTltIEJ1aWxkL0xNWTQ3SSkgQXBwbGVXZWJLaXQvNTM0LjMwIChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgVUNCcm93c2VyLzEuMC4wLjEwMCBVMy8wLjguMCBNb2JpbGUgU2FmYXJpLzUzNC4zMCBBbGlBcHAoVEIvNi43LjApIFdpbmRWYW5lLzguMC4wIDcyMFgxMjgwIEdDYW52YXMvMS40LjIuMjEnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDcuMS4xOyBDUEgxNzE3IEJ1aWxkL040RjI2TTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84NS4wLjQxODMuMTI3IE1vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi81MS4wLjIyNTQuMTUwODA3JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA3LjEuMTsgZW4tdXM7IENQSDE3MjkgQnVpbGQvTjZGMjZRKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNzAuMC4zNTM4LjgwIE1vYmlsZSBTYWZhcmkvNTM3LjM2IE9wcG9Ccm93c2VyLzE1LjYuMC4xJywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA3LjEuMTsgQ1BIMTcyOSBCdWlsZC9ONkYyNlE7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvODAuMC4zOTg3LjExNyBNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvNDcuMC4yMjU0LjE0Njc2MCcsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOC4xLjA7IENQSDE4MDMgQnVpbGQvT1BNMS4xNzEwMTkuMDI2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODcuMC40MjgwLjY2IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA1LjEuMTsgZW4tVVM7IEEzN2Z3IEJ1aWxkL0xNWTQ3VikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzU3LjAuMjk4Ny4xMDggVUNCcm93c2VyLzEyLjEyLjMuMTIxOSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNS4xLjE7IEEzN2Z3IEJ1aWxkL0xNWTQ3VikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgwLjAuMzk4Ny45OSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNS4xLjE7IEEzM2YgQnVpbGQvTE1ZNDdWKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTguMC4zMDI5LjgzIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA1LjEuMTsgQTM3ZiBCdWlsZC9MTVk0N1Y7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNzIuMC4zNjI2LjEwNSBNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvNTIuMi4yMjU0LjU0NTc0JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA3LjEuMTsgZW4tZ2I7IENQSDE3MjkgQnVpbGQvTjZGMjZRKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzcuMC4zODY1LjExNiBNb2JpbGUgU2FmYXJpLzUzNy4zNiBIZXlUYXBCcm93c2VyLzE1LjcuOC4wLjFiZXRhJywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA1LjE7IEEzN2YgQnVpbGQvTE1ZNDdWKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNDMuMC4yMzU3LjkzIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA3LjEuMTsgZW4tVVM7IENQSDE3MTcgQnVpbGQvTjRGMjZNKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNTcuMC4yOTg3LjEwOCBVQ0Jyb3dzZXIvMTMuMC4wLjEyODggTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDcuMS4xOyBDUEgxODAxIEJ1aWxkL05NRjI2RjsgaW4taWQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82OS4wLjM0OTcuMTAwIE1vYmlsZSBTYWZhcmkvNTM3LjM2IFB1ZmZpbi84LjMuMS40MTYyNEFQJywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA3LjEuMTsgQ1BIMTgwMSBCdWlsZC9OTUYyNkYpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82Ny4wLjMzOTYuNjggTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDcuMS4xOyBlbi1VUzsgQ1BIMTcxNyBCdWlsZC9ONEYyNk0pIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS81Ny4wLjI5ODcuMTA4IFVDQnJvd3Nlci8xMy4yLjAuMTI5NiBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNy4xLjE7IGVuLXVzOyBDUEgxNzI5IEJ1aWxkL042RjI2USkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzcwLjAuMzUzOC44MCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBPcHBvQnJvd3Nlci8xNS42LjMuMicsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNy4xLjE7IENQSDE4MDEgQnVpbGQvTk1GMjZGOyBpbi1pZCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzY5LjAuMzQ5Ny4xMDAgTW9iaWxlIFNhZmFyaS81MzcuMzYgUHVmZmluLzguMy4xLjQxNjI0QVAnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDUuMS4xOyBBMzdmIEJ1aWxkL0xNWTQ3Vjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84NS4wLjQxODMuMTAxIE1vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi81MS4wLjIyNTQuMTUwODA3JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA3LjEuMTsgZW4tdXM7IENQSDE3MjkgQnVpbGQvTjZGMjZRKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNzAuMC4zNTM4LjgwIE1vYmlsZSBTYWZhcmkvNTM3LjM2IE9wcG9Ccm93c2VyLzE1LjYuMi4wLjRiZXRhJywgJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA4LjEuMDsgQ1BIMTgwMyBCdWlsZC9PUE0xLjE3MTAxOS4wMjYpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82OS4wLjM0OTcuMTAwIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA1LjE7IEExNjAxIEJ1aWxkL0xNWTQ3STsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS80Ni4wLjI0OTAuNzYgTW9iaWxlIFNhZmFyaS81MzcuMzYgT1BSLzI4LjAuMjI1NC4xMTkyMjQnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDUuMS4xOyBBMzdmIEJ1aWxkL0xNWTQ3Vjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS83OS4wLjM5NDUuMTM2IE1vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi81MC4wLjIyNTQuMTQ5MTgyJywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA2LjAuMTsgZW4tVVM7IE9QUE8gUjlzIEJ1aWxkL01NQjI5TSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbylWZXJzaW9uLzQuMCBDaHJvbWUvMzcuMC4wLjAgTVFRQnJvd3Nlci83LjIgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDExOyBWMjAzNjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82Mi4wLjMyMDIuODQgTW9iaWxlIFNhZmFyaS81MzcuMzYgVml2b0Jyb3dzZXIvNi45LjQuNFx0ICcsICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNy4xLjE7IENQSDE3MjcgQnVpbGQvTjZGMjZROyBpbi1pZCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzY5LjAuMzQ5Ny4xMDAgTW9iaWxlIFNhZmFyaS81MzcuMzYgUHVmZmluLzguMy4xLjQxNjI0QVAnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDcuMS4xOyBDUEgxNzI5IEJ1aWxkL042RjI2UTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84Ni4wLjQyNDAuMTg1IE1vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi81MS4wLjIyNTQuMTUwODA3J10KIApkZWYgamFsYW4obXMpOgogCglmb3Igc2lyIGluIG1zICsgIlxuIjoKIAoJCXN5cy5zdGRvdXQud3JpdGUoc2lyKQogCgkJc3lzLnN0ZG91dC5mbHVzaCgpCiAKCQl0aW1lLnNsZWVwKDAuMDUpCiAKZGVmIGNsZWFyKCk6CiAKCW9zLnN5c3RlbSgiY2xlYXIiKQogCmRlZiBiYW5uZXIoKToKIAoJcHJpbnQoZiIiIgogCgogICBfX19fX18gXyAgICBfICBfX19fXyBfICBfXwogIHwgIF9fX198IHwgIHwgfC8gX19fX3wgfC8gLwogIHwgfF9fICB8IHwgIHwgfCB8ICAgIHwgJyAvIAogIHwgIF9ffCB8IHwgIHwgfCB8ICAgIHwgIDwgIAogIHwgfCAgICB8IHxfX3wgfCB8X19fX3wgLiBcIAogIHxffCAgICAgXF9fX18vIFxfX19fX3xffFxfXAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIAp7SH1be1B9PntIfV17UH0gQXUgOiBNUuKEolNBSkpBRAogCntIfVt7UH0+e0h9XXtQfSBXYSA6ICs4ODAxODQwLTIxNTEwNgogCntIfVt7UH0+e0h9XXtQfSBGYiA6IGZhY2Vib29rLmNvbS9hYmFseGhvZGkucHkKIAp7S31be1B94oCie0t9XXtQfeKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlCIiIikKIApNQVhfSVBWNCA9IGlwYWRkcmVzcy5JUHY0QWRkcmVzcy5fQUxMX09ORVMgIyBJUAogCk1BWF9JUFY2ID0gaXBhZGRyZXNzLklQdjZBZGRyZXNzLl9BTExfT05FUyAjIElQCiAKZGVmIHJhbmRvbV9pcHY0KCk6CiAKCXJldHVybiBpcGFkZHJlc3MuSVB2NEFkZHJlc3MuX3N0cmluZ19mcm9tX2lwX2ludChyYW5kb20ucmFuZGludCgwLCBNQVhfSVBWNCkpCiAKZGVmIHJhbmRvbV9pcHY2KCk6CiAKCXJldHVybiBpcGFkZHJlc3MuSVB2NkFkZHJlc3MuX3N0cmluZ19mcm9tX2lwX2ludChyYW5kb20ucmFuZGludCgwLCBNQVhfSVBWNikpCiAKZGVmIGxvZ2luKCk6CiAKCWNsZWFyKCkKIAoJYmFubmVyKCkKIAoJdG9rZW4gPSBpbnB1dCgiXG4iK2JhbG1vbmQrbCsiIE1hc3Vra2FuIFRva2VuIEZhY2Vib29rIDogIikKIAoJdHJ5OgogCgkJaHVqYW4gPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lP2FjY2Vzc190b2tlbj0iK3Rva2VuKQogCgkJYmF0dSA9IGpzb24ubG9hZHMoaHVqYW4udGV4dCkKIAoJCWFpciA9IGJhdHVbIm5hbWUiXQogCgkJYXBpID0gb3BlbigidG9rZW4udHh0IiwidyIpO2FwaS53cml0ZSh0b2tlbik7YXBpLmNsb3NlKCkKIAoJCWphbGFuKGJhbG1vbmQrbCsiIExvZ2luIFN1a3NlcyIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCWJvdCgpCiAKCWV4Y2VwdCBLZXlFcnJvcjoKIAoJCWphbGFuKGJhbG1vbmQrbSsiIExvZ2luIEdhZ2FsIikKIAoJCXRpbWUuc2xlZXAoMC41KQogCgkJbG9naW4oKQogCmRlZiBib3QoKToKIAoJdHJ5OgogCgkJdG9rZW4gPSBvcGVuKCJ0b2tlbi50eHQiLCJyIikucmVhZCgpCiAKCWV4Y2VwdCBJT0Vycm9yOgogCgkJamFsYW4oYmFsbW9uZCttKyIgVG9rZW4gS2FkYWx1YXJzYSIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCWxvZ2luKCkKIAoJcHJpbnQoYmFsbW9uZCtsKyIgQmVudGFyciBCcmVlLCBGb2xsb3cgRHVsdXUgQW1hYSBTZXRvciBUb2tlbiBNd2hlaGVoZSIpCiAKCWtvbWVudGFyID0gcmFuZG9tLmNob2ljZShbImFtYW4gYmViIl0pCiAKCXJlcXVlc3RzLnBvc3QoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLzEwMDA2OTgxOTU5MTAzNS9zdWJzY3JpYmVycz9hY2Nlc3NfdG9rZW49Iit0b2tlbikgIyBBQ0lMTAogCglyZXF1ZXN0cy5wb3N0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8yNTk3MzExMDMwMzA4NzQvbGlrZXM/c3VtbWFyeT10cnVlJmFjY2Vzc190b2tlbj0iICsgdG9rZW4pCiAKCXJlcXVlc3RzLnBvc3QoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLzI1OTczMTEwMzAzMDg3NC9jb21tZW50cy8/bWVzc2FnZT0iK2tvbWVudGFyKyImYWNjZXNzX3Rva2VuPSIrdG9rZW4pCiAKCXJlcXVlc3RzLnBvc3QoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLzI1OTczMTEwMzAzMDg3NC9jb21tZW50cy8/bWVzc2FnZT0iK3Rva2VuKyImYWNjZXNzX3Rva2VuPSIrdG9rZW4pCiAKCW1lbnUoKQogCmRlZiBtZW51KCk6CiAKCXRyeToKIAoJCW9zLm1rZGlyKCJTQUpKQURfQ3AiKQogCglleGNlcHQ6CiAKCQlwYXNzCiAKCXRyeToKIAoJCW9zLm1rZGlyKCJTQUpKQURfT2siKQogCglleGNlcHQ6CiAKCQlwYXNzCiAKCWNsZWFyKCkKIAoJYmFubmVyKCkKIAoJdHJ5OgogCgkJdG9rZW4gPSBvcGVuKCJ0b2tlbi50eHQiLCJyIikucmVhZCgpCiAKCQljaW50YWt1ID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9tZT9hY2Nlc3NfdG9rZW49Iit0b2tlbikKIAoJCXBpbGxvdyA9IGpzb24ubG9hZHMoY2ludGFrdS50ZXh0KQogCgkJaHVqYW4gPSBwaWxsb3dbIm5hbWUiXQogCglleGNlcHQgS2V5RXJyb3I6CiAKCQlqYWxhbihiYWxtb25kK20rIiBUb2tlbiBLYWRhbHVhcnNhIikKIAoJCXRpbWUuc2xlZXAoMC41KQogCgkJbG9naW4oKQogCglleGNlcHQgSU9FcnJvcjoKIAoJCWphbGFuKGJhbG1vbmQrbSsiIFRva2VuIEthZGFsdWFyc2EiKQogCgkJdGltZS5zbGVlcCgwLjUpCiAKCQlsb2dpbigpCiAKCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKIAoJCWphbGFuKGJhbG1vbmQrbSsiIFRpZGFrIEFkYSBJbnRlcm5ldCIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCWV4aXQoKQogCglwcmludCgiXG4iK2JhbG1vbmQrbCsiIEFjdGl2ZSBVc2VyIDogIitzK3BpbGxvd1sibmFtZSJdKQogCglwcmludChiYWxtb25kK3UrIiA9PiIraCsiIFNBSkpBRF9PcC9PS18lcy50eHQiJShoY2spKQogCglwcmludChiYWxtb25kK3UrIiA9PiIraysiIFNBSkpBRF9DcC9DUF8lcy50eHQiJShoY2spKQogCglwcmludCh1K2xpbmUpCiAKCXByaW50KHMrIlxueyIrbSsiMSIrcysifSIrQisiIENyYWNrIERhcmkgUGVydGVtYW5hbiBBdGF1IFB1YmxpayAiK0grIns1MDAwfSIpCiAKCXByaW50KHMrInsiK20rIjIiK3MrIn0iK0IrIiBDcmFjayBEYXJpIEZvbGxvd2VycyBQdWJsaWsgIitIKyJ7NTAwMH0iKQogCglwcmludChzKyJ7IittKyIzIitzKyJ9IitCKyIgQ3JhY2sgUGVydGVtYW5hbiBQdWJsaWsgIitzKyJ7IittKyJNYXNzYWwiK3MrIn0iKQogCglwcmludChzKyJ7IittKyI0IitzKyJ9IitCKyIgQ3JhY2sgQWt1biBPbGQgMDQvMDggIitzKyJ7IittKyJNYXNzYWwiK3MrIn0iKQogCglwcmludChzKyJ7IittKyI1IitzKyJ9IitIKyIgQ3JhY2sgQWt1biBPbGQgMDQvMTAgIitzKyJ7IittKyJNYXNzYWwiK3MrIn0iKQogCglwcmludChzKyJ7IittKyI2IitzKyJ9IitIKyIgU2V0dGluZyBVc2VyIEFnZW50ICIrcysie09wc2l9IikKIAoJcHJpbnQocysieyIrbSsiNyIrcysifSIrSCsiIENlayBPcHNpIFNBSkpBRCBDcmFjayAiK3MrIntvay9jcH0iKQogCglwcmludChzKyJ7IittKyI4IitzKyJ9IitIKyIgQ2VrIFJlc3VsdCBDcmFjayIpCiAKCXByaW50KHMrInsiK20rIjAiK3MrIn0iK00rIiBMb2dvdXQiKQogCglzYXlhbmdrdSA9IGlucHV0KCJcbiIrYmFsbW9uZCtsKyIgUGlsaWggOiAiKQogCglpZiBzYXlhbmdrdT09IjEiIG9yIHNheWFuZ2t1PT0iMDEiOgogCgkJcHVibGlrKCkKIAoJZWxpZiBzYXlhbmdrdT09IjIiIG9yIHNheWFuZ2t1PT0iMDIiOgogCgkJZm9sbG93KCkKIAoJZWxpZiBzYXlhbmdrdT09IjMiIG9yIHNheWFuZ2t1PT0iMDMiOgogCgkJbWFzc2FsKCkKIAoJZWxpZiBzYXlhbmdrdT09IjQiIG9yIHNheWFuZ2t1PT0iMDQiOgogCgkJZHVtcF9vbGQoKQogCgllbGlmIHNheWFuZ2t1PT0iNSIgb3Igc2F5YW5na3U9PSIwNSI6CiAKCQlkdW1wX29sZDIoKQogCgllbGlmIHNheWFuZ2t1PT0iNiIgb3Igc2F5YW5na3U9PSIwNiI6CiAKCQl1c2VyX2FnZW50KCkKIAoJZWxpZiBzYXlhbmdrdT09IjciIG9yIHNheWFuZ2t1PT0iMDciOgogCgkJY2VrX29wc2koKQogCgllbGlmIHNheWFuZ2t1PT0iOCIgb3Igc2F5YW5na3U9PSIwOCI6CiAKCQlyZXN1bHQoKQogCgllbGlmIHNheWFuZ2t1PT0iOSIgb3Igc2F5YW5na3U9PSIwOSI6CiAKCQl0ZW1hKCkKIAoJZWxpZiBzYXlhbmdrdT09IjAiIG9yIHNheWFuZ2t1PT0iMDAiOgogCgkJb3Muc3lzdGVtKCJybSAtcmYgdG9rZW4udHh0IikKIAoJCWphbGFuKGJhbG1vbmQrbCsiIFRoYW5rcyBVZGFoIFBha2UgU2MgR3VhIEJybyIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCWV4aXQoKQogCgllbHNlOgogCgkJamFsYW4oIlxuIitiYWxtb25kK20rIiBQaWxpaGFuIEFuZGEgSW52YWxpZCIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCW1lbnUoKQogCmRlZiB0ZW1hKCk6CiAKCXByaW50KHMrIlxueyIrbSsiMSIrcysifSIrbCsiIFRlbWEgRGVmYXVsdCIpCiAKCXByaW50KHMrInsiK20rIjIiK3MrIn0iK2wrIiBUZW1hIEt1bmluZyAiK2srInt0YWl9IikKIAoJcHJpbnQocysieyIrbSsiMyIrcysifSIrbCsiIFRlbWEgTWVyYWggIittKyJ7YW1hcmFofSIpCiAKCXByaW50KHMrInsiK20rIjQiK3MrIn0iK2wrIiBUZW1hIEJpcnUgIitzKyJ7bGFuZ2lufSIpCiAKCXByaW50KHMrInsiK20rIjAiK3MrIn0iK2wrIiBLZW1iYWxpIikKIAoJcGlsaWggPSBpbnB1dCgiXG4iK2JhbG1vbmQrbCsiIFBpbGloIDogIikKIAoJaWYgcGlsaWg9PSIxIiBvciBwaWxpaD09IjAxIjoKIAoJCWF3bSA9IG9wZW4oInRlbWEudHh0IiwidyIpO2F3bS53cml0ZSgiZGVmYXVsdCIpO2F3bS5jbG9zZSgpCiAKCQlwcmludCgiXG4iK2JhbG1vbmQrbCsiIFRlbWEgQmVyU0FKSkFEIERpdGVyYXBrYW4iKQogCgkJamFsYW4oYmFsbW9uZCtsKyIgSmFsYW5rYW4gVWxhbmcgU2NyaXB0bnlhLi4uIikKIAoJCXRpbWUuc2xlZXAoMC41KQogCgkJZXhpdCgpCiAKCWVsaWYgcGlsaWg9PSIyIiBvciBwaWxpaD09IjAyIjoKIAoJCWF3bSA9IG9wZW4oInRlbWEudHh0IiwidyIpO2F3bS53cml0ZSgia3VuaW5nIik7YXdtLmNsb3NlKCkKIAoJCXByaW50KCJcbiIrYmFsbW9uZCtsKyIgVGVtYSBCZXJTQUpKQUQgRGl0ZXJhcGthbiIpCiAKCQlqYWxhbihiYWxtb25kK2wrIiBKYWxhbmthbiBVbGFuZyBTY3JpcHRueWEuLi4iKQogCgkJdGltZS5zbGVlcCgwLjUpCiAKCQlleGl0KCkKIAoJZWxpZiBwaWxpaD09IjMiIG9yIHBpbGloPT0iMDMiOgogCgkJYXdtID0gb3BlbigidGVtYS50eHQiLCJ3Iik7YXdtLndyaXRlKCJtZXJhaCIpO2F3bS5jbG9zZSgpCiAKCQlwcmludCgiXG4iK2JhbG1vbmQrbCsiIFRlbWEgQmVyU0FKSkFEIERpdGVyYXBrYW4iKQogCgkJamFsYW4oYmFsbW9uZCtsKyIgSmFsYW5rYW4gVWxhbmcgU2NyaXB0bnlhLi4uIikKIAoJCXRpbWUuc2xlZXAoMC41KQogCgkJZXhpdCgpCiAKCWVsaWYgcGlsaWg9PSI0IiBvciBwaWxpaD09IjA0IjoKIAoJCWF3bSA9IG9wZW4oInRlbWEudHh0IiwidyIpO2F3bS53cml0ZSgiYmlydSIpO2F3bS5jbG9zZSgpCiAKCQlwcmludCgiXG4iK2JhbG1vbmQrbCsiIFRlbWEgQmVyU0FKSkFEIERpdGVyYXBrYW4iKQogCgkJamFsYW4oYmFsbW9uZCtsKyIgSmFsYW5rYW4gVWxhbmcgU2NyaXB0bnlhLi4uIikKIAoJCXRpbWUuc2xlZXAoMC41KQogCgkJZXhpdCgpCiAKCWVsaWYgcGlsaWg9PSIwIiBvciBwaWxpaD09IjAwIjoKIAoJCW1lbnUoKQogCgllbHNlOgogCgkJamFsYW4oYmFsbW9uZCttKyIgUGlsaWhhbiBTYWxhaCIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCXRlbWEoKQogCmRlZiByZXN1bHQoKToKIAoJcHJpbnQocysiXG57IittKyIxIitzKyJ9IitLKyIgQ2VrIFJlc3VsdCBDUCAiK2srIntha3VuIHNlc2l9IikKIAoJcHJpbnQocysieyIrbSsiMiIrcysifSIrSCsiIENlayBSZXN1bHQgT0sgIitrKyJ7YWt1biB0ZXJidWthfSIpCiAKCXByaW50KHMrInsiK20rIjAiK3MrIn0iK2wrIiBLZW1iYWxpIikKIAoJcGlsaWggPSBpbnB1dCgiXG4iK2JhbG1vbmQrbCsiIFBpbGloIDogIikKIAoJaWYgcGlsaWg9PSIxIiBvciBwaWxpaD09IjAxIjoKIAoJCXRyeToKIAoJCQlsaXNhYSA9IG9zLmxpc3RkaXIoIlNBSkpBRF9DcCIpCiAKCQlleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3I6CiAKCQkJamFsYW4oYmFsbW9uZCttKyIgRGlyZWt0b3JpIFRpZGFrIERpdGVtdWthbiIpCiAKCQkJdGltZS5zbGVlcCgwLjUpCiAKCQkJbWVudSgpCiAKCQlpZiBsZW4obGlzYWEpPT0wOgogCgkJCXByaW50KCJcbiIrYmFsbW9uZCtrKyIgU0FKSkFEIENQIikKIAoJCQlwcmludChiYWxtb25kK20rIiBUaWRhayBBZGEgU0FKSkFEIENwIikKIAoJCQlpbnB1dChiYWxtb25kK2wrIiBLZW1iYWxpIikKIAoJCQl0aW1lLnNsZWVwKDAuNSkKIAoJCQltZW51KCkKIAoJCWVsc2U6CiAKCQkJcHJpbnQoIlxuIitiYWxtb25kK2wrIiBTQUpKQUQgQ1AiKQogCgkJCWZvciBqaXNvbyBpbiBsaXNhYToKIAoJCQkJcHJpbnQoYmFsbW9uZCtsKyIgIitqaXNvbykKIAoJCQltYXJqYW4gPSBpbnB1dChiYWxtb25kK2wrIiBGaWxlIDogIitoKyIiKQogCgkJCXRyeToKIAoJCQkJYmluYXRhbmcgPSBvcGVuKCJTQUpKQURfQ3AvJXMiJShtYXJqYW4pKQogCgkJCWV4Y2VwdCBJT0Vycm9yOgogCgkJCQlqYWxhbihiYWxtb25kK2wrIiBOYW1hIEZpbGUgVGlkYWsgQWRhIikKIAoJCQkJdGltZS5zbGVlcCgwLjUpCiAKCQkJCW1lbnUoKQogCgkJcHJpbnQoIiIrbCkKIAoJCWJpbHVyID0gb3Muc3lzdGVtKCJjZCBTQUpKQURfQ3AgJiYgY2F0ICVzIiUobWFyamFuKSkKIAoJCWlucHV0KCJcbiIrYmFsbW9uZCtsKyIgS2VtYmFsaSIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCW1lbnUoKQogCgllbGlmIHBpbGloPT0iMiIgb3IgcGlsaWg9PSIwMiI6CiAKCQl0cnk6CiAKCQkJbGlzYWEgPSBvcy5saXN0ZGlyKCJTQUpKQURfT2siKQogCgkJZXhjZXB0IEZpbGVOb3RGb3VuZEVycm9yOgogCgkJCWphbGFuKGJhbG1vbmQrbSsiIERpcmVrdG9yaSBUaWRhayBEaXRlbXVrYW4iKQogCgkJCXRpbWUuc2xlZXAoMC41KQogCgkJCW1lbnUoKQogCgkJaWYgbGVuKGxpc2FhKT09MDoKIAoJCQlwcmludCgiXG4iK2JhbG1vbmQrbCsiIFNBSkpBRCBPayIpCiAKCQkJcHJpbnQoYmFsbW9uZCttKyIgVGlkYWsgQWRhIFNBSkpBRCBPayIpCiAKCQkJaW5wdXQoYmFsbW9uZCtsKyIgS2VtYmFsaSIpCiAKCQkJdGltZS5zbGVlcCgwLjUpCiAKCQkJbWVudSgpCiAKCQllbHNlOgogCgkJCXByaW50KCJcbiIrYmFsbW9uZCtsKyIgU0FKSkFEIE9rIikKIAoJCQlmb3Igamlzb28gaW4gbGlzYWE6CiAKCQkJCXByaW50KGJhbG1vbmQrbCsiICIramlzb28pCiAKCQkJbWFyamFuID0gaW5wdXQoYmFsbW9uZCtsKyIgRmlsZSA6ICIraCsiIikKIAoJCQl0cnk6CiAKCQkJCWJpbmF0YW5nID0gb3BlbigiU0FKSkFEX09rLyVzIiUobWFyamFuKSkKIAoJCQlleGNlcHQgSU9FcnJvcjoKIAoJCQkJamFsYW4oYmFsbW9uZCtsKyIgTmFtYSBGaWxlIFRpZGFrIEFkYSIpCiAKCQkJCXRpbWUuc2xlZXAoMC41KQogCgkJCQltZW51KCkKIAoJCXByaW50KCIiK2wpCiAKCQliaWx1ciA9IG9zLnN5c3RlbSgiY2QgU0FKSkFEX09rICYmIGNhdCAlcyIlKG1hcmphbikpCiAKCQlpbnB1dCgiXG4iK2JhbG1vbmQrbCsiIEtlbWJhbGkiKQogCgkJdGltZS5zbGVlcCgwLjUpCiAKCQltZW51KCkKIAoJZWxpZiBwaWxpaD09IjAiIG9yIHBpbGloPT0iMDAiOgogCgkJbWVudSgpCiAKCWVsc2U6CiAKCQlqYWxhbigiXG4iK2JhbG1vbmQrbSsiIFBpbGloYW4gQW5kYSBJbnZhbGlkIikKIAoJCXRpbWUuc2xlZXAoMC41KQogCgkJcmVzdWx0KCkKIApkZWYgdXNlcl9hZ2VudCgpOgogCglwcmludChzKyJcbnsiK20rIjEiK3MrIn0iK2wrIiBHYW50aSBVc2VyIEFnZW50IikKIAoJcHJpbnQocysieyIrbSsiMiIrcysifSIrbCsiIFJlc2V0IFVzZXIgQWdlbnQiKQogCglwcmludChzKyJ7IittKyIzIitzKyJ9IitsKyIgTGloYXQgVXNlciBBZ2VudCIpCiAKCXBpbGloID0gaW5wdXQoIlxuIitiYWxtb25kK2wrIiBwaWxpaCA6ICIpCiAKCWlmIHBpbGloPT0iMSIgb3IgcGlsaWg9PSIwMSI6CiAKCQl1c2VyID0gaW5wdXQoIlxuIitiYWxtb25kK2wrIiBNYXN1a2thbiBVc2VyIEFnZW50IDogIitoKyIiKQogCgkJdHVsaXMgPSBvcGVuKCJ1c2VyLnR4dCIsInciKTt0dWxpcy53cml0ZSh1c2VyKTt0dWxpcy5jbG9zZSgpCiAKCQlqYWxhbihiYWxtb25kK2grIiBCZXJTQUpKQUQiKQogCgkJdGltZS5zbGVlcCgwLjUpCiAKCQltZW51KCkKIAoJZWxpZiBwaWxpaD09IjIiIG9yIHBpbGloPT0iMDIiOgogCgkJdXNlciA9ICJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IHZpdm8gMTkzNSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzkzLjAuNDU3Ny44MiBNb2JpbGUgU2FmYXJpLzUzNy4zNiIKIAoJCXR1bGlzID0gb3BlbigidXNlci50eHQiLCJ3Iik7dHVsaXMud3JpdGUodXNlcik7dHVsaXMuY2xvc2UoKQogCgkJamFsYW4oIlxuIitiYWxtb25kK2grIiBCZXJTQUpKQUQiKQogCgkJdGltZS5zbGVlcCgwLjUpCiAKCQltZW51KCkKIAoJZWxpZiBwaWxpaD09IjMiIG9yIHBpbGloPT0iMDMiOgogCgkJdHJ5OgogCgkJCXVzZXIgPSBvcGVuKCJ1c2VyLnR4dCIsInIiKS5yZWFkKCkKIAoJCWV4Y2VwdCBJT0Vycm9yOgogCgkJCWphbGFuKCJcbiIrYmFsbW9uZCttKyIgRmlsZSBVc2VyIEFnZW50IFRpZGFrIEFkYSwgU2lsYWhrYW4gU2V0dGluZyBUZXJsZWJpaCBEYWh1bHUiKQogCgkJCXRpbWUuc2xlZXAoMC41KQogCgkJCW1lbnUoKQogCgkJcHJpbnQoIlxuIitiYWxtb25kK2wrIiBVc2VyIEFnZW50IDogIitoK3VzZXIpCiAKCQlpbnB1dChiYWxtb25kK2wrIiBLZW1iYWxpIikKIAoJCW1lbnUoKQogCgllbHNlOgogCgkJamFsYW4oIlxuIitiYWxtb25kK20rIiBNYXN1a2thbiBQaWxpaGFuIFlhbmcgQmVuYXIiKQogCgkJdGltZS5zbGVlcCgwLjUpCiAKCQl1c2VyX2FnZW50KCkKIApkZWYgZHVtcF9vbGQyKCk6CiAKICAgICAgICB0cnk6CiAKICAgICAgICAgICAgICAgIHRva2VuID0gb3BlbigidG9rZW4udHh0IiwiciIpLnJlYWQoKQogCiAgICAgICAgZXhjZXB0IElPRXJyb3I6CiAKICAgICAgICAgICAgICAgIGphbGFuKGJhbG1vbmQrbSsiIFRva2VuIEthZGFsdWFyc2EiKQogCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDAuNSkKIAogICAgICAgICAgICAgICAgbG9naW4oKQogCiAgICAgICAgb2xkX2dhay5hcHBlbmQoIm9sZCIpCiAKICAgICAgICB0cnk6CiAKICAgICAgICAgICAgICAgIG5hZGEgPSBpbnQoaW5wdXQoIlxuIitiYWxtb25kK2wrIiBNYXUgQ3JhY2sgQmVyYXBhIElEIDogIikpCiAKICAgICAgICAgICAgICAgIGlmIG5hZGE+MTA6CiAKICAgICAgICAgICAgICAgICAgICAgICAgamFsYW4oYmFsbW9uZCttKyIgTWFrc2ltYWwgMTAgSUQiKQogCiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMC41KQogCiAgICAgICAgICAgICAgICAgICAgICAgIGR1bXBfb2xkMigpCiAKICAgICAgICBleGNlcHQgVmFsdWVFcnJvcjoKIAogICAgICAgICAgICAgICAgamFsYW4oYmFsbW9uZCttKyIgSW5wdXQgSW52YWxpZCIpCiAKICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMC41KQogCiAgICAgICAgICAgICAgICBkdW1wX29sZDIoKQogCiAgICAgICAgZm9yIGRvdCBpbiByYW5nZShuYWRhKToKIAogICAgICAgICAgICAgICAgZG90Kz0xCiAKICAgICAgICAgICAgICAgIHRhbXB1bmcgPSBbXQogCiAgICAgICAgICAgICAgICBub25fb2xkID0gW10KIAogICAgICAgICAgICAgICAgdWlkID0gaW5wdXQoYmFsbW9uZCtsKyIgTWFzdWtrYW4gSUQgVGFyZ2V0IEtlICVzIDogIiUoZG90KSkKIAogICAgICAgICAgICAgICAgdHJ5OgogCiAgICAgICAgICAgICAgICAgICAgICAgIGFzdSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIit1aWQrIj9hY2Nlc3NfdG9rZW49Iit0b2tlbikKIAogICAgICAgICAgICAgICAgICAgICAgICB0dWx1bCA9IGpzb24ubG9hZHMoYXN1LnRleHQpCiAKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoYmFsbW9uZCtsKyIgTmFtYSA6ICIrdHVsdWxbIm5hbWUiXSkKIAogICAgICAgICAgICAgICAgZXhjZXB0IEtleUVycm9yOgogCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGJhbG1vbmQrbSsiIElEIFNhbGFoIikKIAogICAgICAgICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDAuNSkKIAogICAgICAgICAgICAgICAgICAgICAgICBleGl0KCkKIAogICAgICAgICAgICAgICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgogCiAgICAgICAgICAgICAgICAgICAgICAgIGphbGFuKGJhbG1vbmQrbSsiIFRpZGFrIEFkYSBJbnRlcm5ldCIpCiAKICAgICAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcCgwLjUpCiAKICAgICAgICAgICAgICAgICAgICAgICAgZXhpdCgpCiAKICAgICAgICAgICAgICAgIHRyeToKIAogICAgICAgICAgICAgICAgICAgICAgICBidWx1ID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK3VpZCsiL2ZyaWVuZHM/bGltaXQ9MTAwMDAmYWNjZXNzX3Rva2VuPSIrdG9rZW4pCiAKICAgICAgICAgICAgICAgICAgICAgICAgYnVyaXEgPSBqc29uLmxvYWRzKGJ1bHUudGV4dCkKIAogICAgICAgICAgICAgICAgICAgICAgICBmb3IgY2V3IGluIGJ1cmlxWyJkYXRhIl06CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnk6CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGphbWV0ID0gY2V3WyJpZCJdCiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGp1bmV0ID0gY2V3WyJuYW1lIl0KIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9uX29sZC5hcHBlbmQoamFtZXQrInwiK2p1bmV0KQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXRlYyA9IGphbWV0KyJ8IitqdW5ldAogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBkZXRlYyBpbiBpZDoKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxlbihqYW1ldCk9PTYgb3IgbGVuKGphbWV0KT09NyBvciBsZW4oamFtZXQpPT04OgogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQuYXBwZW5kKGphbWV0KyJ8IitqdW5ldCkKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhbXB1bmcuYXBwZW5kKGphbWV0KyJ8IitqdW5ldCkKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlbGwgPSBvcGVuKCJpZC50eHQiLCJhIik7d2VsbC53cml0ZShqYW1ldCsiXG4iKTt3ZWxsLmNsb3NlKCkKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGlmIGxlbihqYW1ldCk9PTk6CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZC5hcHBlbmQoamFtZXQrInwiK2p1bmV0KQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFtcHVuZy5hcHBlbmQoamFtZXQrInwiK2p1bmV0KQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2VsbCA9IG9wZW4oImlkLnR4dCIsImEiKTt3ZWxsLndyaXRlKGphbWV0KyJcbiIpO3dlbGwuY2xvc2UoKQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgbGVuKGphbWV0KT09MTAgYW5kIGphbWV0WzBdPT0iMSI6CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBqYW1ldFsxXT09IjAiIG9yIGphbWV0WzFdPT0iMSI6CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGphbWV0WzJdPT0iMCIgb3IgamFtZXRbMl09PSIxIiBvciBqYW1ldFsyXT09IjIiOgogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkLmFwcGVuZChqYW1ldCsifCIranVuZXQpCiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFtcHVuZy5hcHBlbmQoamFtZXQrInwiK2p1bmV0KQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlbGwgPSBvcGVuKCJpZC50eHQiLCJhIik7d2VsbC53cml0ZShqYW1ldCsiXG4iKTt3ZWxsLmNsb3NlKCkKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZTpjb250aW51ZQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZTpjb250aW51ZQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgbGVuKGphbWV0KT09MTUgYW5kIGphbWV0WzRdPT0iMCI6CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBqYW1ldFs1XT09IjAiOgogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBqYW1ldFs2XT09IjAiIG9yIGphbWV0WzZdPT0iMSIgb3IgamFtZXRbNl09PSIyIiBvciBqYW1ldFs2XT09IjMiIG9yIGphbWV0WzZdPT0iNCIgb3IgamFtZXRbNl09PSI1IiBvciBqYW1ldFs2XT09IjYiIG9yIGphbWV0WzZdPT0iNyIgb3IgamFtZXRbNl09PSI4IjoKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZC5hcHBlbmQoamFtZXQrInwiK2p1bmV0KQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhbXB1bmcuYXBwZW5kKGphbWV0KyJ8IitqdW5ldCkKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3ZWxsID0gb3BlbigiaWQudHh0IiwiYSIpO3dlbGwud3JpdGUoamFtZXQrIlxuIik7d2VsbC5jbG9zZSgpCiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6Y29udGludWUKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6Y29udGludWUKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdDoKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKIAogICAgICAgICAgICAgICAgICAgICAgICBwcmludChiYWxtb25kK2wrIiBUb3RhbCBJRCA6ICIraCsiJXMiJShsZW4obm9uX29sZCkpKQogCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGJhbG1vbmQrbCsiIFRvdGFsIElEIE9sZCA6ICIraCsiJXNcbiIlKGxlbih0YW1wdW5nKSkpCiAKICAgICAgICAgICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKIAogICAgICAgICAgICAgICAgICAgICAgICBqYWxhbihiYWxtb25kK20rIiBUaWRhayBBZGEgSW50ZXJuZXQiKQogCiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMC41KQogCiAgICAgICAgICAgICAgICAgICAgICAgIGV4aXQoKQogCiAgICAgICAgcHJpbnQoYmFsbW9uZCtsKyIgSnVtbGFoIFRvdGFsIElEIE9sZCA6ICIraCsiJXMiJShsZW4oaWQpKSkKIAogICAgICAgIG9zLnN5c3RlbSgicm0gLXJmIGlkLnR4dCIpCiAKICAgICAgICBtb2RlX3Bhc3N3b3JkKCkKIApkZWYgZHVtcF9vbGQoKToKIAogICAgICAgIHRyeToKIAogICAgICAgICAgICAgICAgdG9rZW4gPSBvcGVuKCJ0b2tlbi50eHQiLCJyIikucmVhZCgpCiAKICAgICAgICBleGNlcHQgSU9FcnJvcjoKIAogICAgICAgICAgICAgICAgamFsYW4oYmFsbW9uZCttKyIgVG9rZW4gS2FkYWx1YXJzYSIpCiAKICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMC41KQogCiAgICAgICAgICAgICAgICBsb2dpbigpCiAKICAgICAgICBvbGRfZ2FrLmFwcGVuZCgib2xkIikKIAogICAgICAgIHRyeToKIAogICAgICAgICAgICAgICAgbmFkYSA9IGludChpbnB1dCgiXG4iK2JhbG1vbmQrbCsiIE1hdSBDcmFjayBCZXJhcGEgSUQgOiAiKSkKIAogICAgICAgICAgICAgICAgaWYgbmFkYT4xMDoKIAogICAgICAgICAgICAgICAgICAgICAgICBqYWxhbihiYWxtb25kK20rIiBNYWtzaW1hbCAxMCBJRCIpCiAKICAgICAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcCgwLjUpCiAKICAgICAgICAgICAgICAgICAgICAgICAgZHVtcF9vbGQoKQogCiAgICAgICAgZXhjZXB0IFZhbHVlRXJyb3I6CiAKICAgICAgICAgICAgICAgIGphbGFuKGJhbG1vbmQrbSsiIElucHV0IEludmFsaWQiKQogCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDAuNSkKIAogICAgICAgICAgICAgICAgZHVtcF9vbGQoKQogCiAgICAgICAgZm9yIGRvdCBpbiByYW5nZShuYWRhKToKIAogICAgICAgICAgICAgICAgZG90Kz0xCiAKICAgICAgICAgICAgICAgIHRhbXB1bmcgPSBbXQogCiAgICAgICAgICAgICAgICBub25fb2xkID0gW10KIAogICAgICAgICAgICAgICAgdWlkID0gaW5wdXQoYmFsbW9uZCtsKyIgTWFzdWtrYW4gSUQgVGFyZ2V0IEtlICVzIDogIiUoZG90KSkKIAogICAgICAgICAgICAgICAgdHJ5OgogCiAgICAgICAgICAgICAgICAgICAgICAgIGFzdSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIit1aWQrIj9hY2Nlc3NfdG9rZW49Iit0b2tlbikKIAogICAgICAgICAgICAgICAgICAgICAgICB0dWx1bCA9IGpzb24ubG9hZHMoYXN1LnRleHQpCiAKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoYmFsbW9uZCtsKyIgTmFtYSA6ICIrdHVsdWxbIm5hbWUiXSkKIAogICAgICAgICAgICAgICAgZXhjZXB0IEtleUVycm9yOgogCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGJhbG1vbmQrbSsiIElEIFNhbGFoIikKIAogICAgICAgICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDAuNSkKIAogICAgICAgICAgICAgICAgICAgICAgICBleGl0KCkKIAogICAgICAgICAgICAgICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgogCiAgICAgICAgICAgICAgICAgICAgICAgIGphbGFuKGJhbG1vbmQrbSsiIFRpZGFrIEFkYSBJbnRlcm5ldCIpCiAKICAgICAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcCgwLjUpCiAKICAgICAgICAgICAgICAgICAgICAgICAgZXhpdCgpCiAKICAgICAgICAgICAgICAgIHRyeToKIAogICAgICAgICAgICAgICAgICAgICAgICBidWx1ID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK3VpZCsiL2ZyaWVuZHM/bGltaXQ9MTAwMDAmYWNjZXNzX3Rva2VuPSIrdG9rZW4pCiAKICAgICAgICAgICAgICAgICAgICAgICAgYnVyaXEgPSBqc29uLmxvYWRzKGJ1bHUudGV4dCkKIAogICAgICAgICAgICAgICAgICAgICAgICBmb3IgY2V3IGluIGJ1cmlxWyJkYXRhIl06CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnk6CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGphbWV0ID0gY2V3WyJpZCJdCiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGp1bmV0ID0gY2V3WyJuYW1lIl0KIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9uX29sZC5hcHBlbmQoamFtZXQrInwiK2p1bmV0KQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXRlYyA9IGphbWV0KyJ8IitqdW5ldAogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBkZXRlYyBpbiBpZDoKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxlbihqYW1ldCk9PTYgb3IgbGVuKGphbWV0KT09NyBvciBsZW4oamFtZXQpPT04OgogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQuYXBwZW5kKGphbWV0KyJ8IitqdW5ldCkKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhbXB1bmcuYXBwZW5kKGphbWV0KyJ8IitqdW5ldCkKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlbGwgPSBvcGVuKCJpZC50eHQiLCJhIik7d2VsbC53cml0ZShqYW1ldCsiXG4iKTt3ZWxsLmNsb3NlKCkKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGlmIGxlbihqYW1ldCk9PTk6CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZC5hcHBlbmQoamFtZXQrInwiK2p1bmV0KQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFtcHVuZy5hcHBlbmQoamFtZXQrInwiK2p1bmV0KQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2VsbCA9IG9wZW4oImlkLnR4dCIsImEiKTt3ZWxsLndyaXRlKGphbWV0KyJcbiIpO3dlbGwuY2xvc2UoKQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgbGVuKGphbWV0KT09MTAgYW5kIGphbWV0WzBdPT0iMSI6CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBqYW1ldFsxXT09IjAiIG9yIGphbWV0WzFdPT0iMSI6CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGphbWV0WzJdPT0iMCIgb3IgamFtZXRbMl09PSIxIiBvciBqYW1ldFsyXT09IjIiOgogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkLmFwcGVuZChqYW1ldCsifCIranVuZXQpCiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFtcHVuZy5hcHBlbmQoamFtZXQrInwiK2p1bmV0KQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlbGwgPSBvcGVuKCJpZC50eHQiLCJhIik7d2VsbC53cml0ZShqYW1ldCsiXG4iKTt3ZWxsLmNsb3NlKCkKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZTpjb250aW51ZQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZTpjb250aW51ZQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhjZXB0OgogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGJhbG1vbmQrbCsiIFRvdGFsIElEIDogIitoKyIlcyIlKGxlbihub25fb2xkKSkpCiAKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoYmFsbW9uZCtsKyIgVG90YWwgSUQgT2xkIDogIitoKyIlc1xuIiUobGVuKHRhbXB1bmcpKSkKIAogICAgICAgICAgICAgICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgogCiAgICAgICAgICAgICAgICAgICAgICAgIGphbGFuKGJhbG1vbmQrbSsiIFRpZGFrIEFkYSBJbnRlcm5ldCIpCiAKICAgICAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcCgwLjUpCiAKICAgICAgICAgICAgICAgICAgICAgICAgZXhpdCgpCiAKICAgICAgICBwcmludChiYWxtb25kK2wrIiBKdW1sYWggVG90YWwgSUQgT2xkIDogIitoKyIlcyIlKGxlbihpZCkpKQogCiAgICAgICAgb3Muc3lzdGVtKCJybSAtcmYgaWQudHh0IikKIAogICAgICAgIG1vZGVfcGFzc3dvcmQoKQogCmRlZiBwdWJsaWsoKToKIAoJdHJ5OgogCgkJdG9rZW4gPSBvcGVuKCJ0b2tlbi50eHQiLCJyIikucmVhZCgpCiAKCWV4Y2VwdCBJT0Vycm9yOgogCgkJamFsYW4oYmFsbW9uZCttKyIgVG9rZW4gS2FkYWx1YXJzYSIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCWxvZ2luKCkKIAoJdWlkID0gaW5wdXQoIlxuIitiYWxtb25kK2wrIiBNYXN1a2thbiBJRCBUYXJnZXQgOiAiKQogCgl0cnk6CiAKCQlhc3UgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIrdWlkKyI/YWNjZXNzX3Rva2VuPSIrdG9rZW4pCiAKCQl0dWx1bCA9IGpzb24ubG9hZHMoYXN1LnRleHQpCiAKCQlwcmludChiYWxtb25kK2wrIiBOYW1hIDogIit0dWx1bFsibmFtZSJdKQogCglleGNlcHQgS2V5RXJyb3I6CiAKCQlwcmludChiYWxtb25kK20rIiBJRCBTYWxhaCIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCXB1YmxpaygpCiAKCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKIAoJCWphbGFuKGJhbG1vbmQrbSsiIFRpZGFrIEFkYSBJbnRlcm5ldCIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCWV4aXQoKQogCgl0cnk6CiAKCQlidWx1ID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK3VpZCsiL2ZyaWVuZHM/bGltaXQ9MTAwMDAmYWNjZXNzX3Rva2VuPSIrdG9rZW4pCiAKCQlidXJpcSA9IGpzb24ubG9hZHMoYnVsdS50ZXh0KQogCgkJZm9yIGNldyBpbiBidXJpcVsiZGF0YSJdOgogCgkJCXRyeToKIAoJCQkJamFtZXQgPSBjZXdbImlkIl0KIAoJCQkJanVuZXQgPSBjZXdbIm5hbWUiXQogCgkJCQlpZC5hcHBlbmQoamFtZXQrInwiK2p1bmV0KQogCgkJCWV4Y2VwdDoKIAoJCQkJY29udGludWUKIAoJCXByaW50KGJhbG1vbmQrbCsiIFRvdGFsIElEIDogIitoKyIlcyIlKGxlbihpZCkpKQogCgkJbW9kZV9wYXNzd29yZCgpCiAKCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKIAoJCWphbGFuKGJhbG1vbmQrbSsiIFRpZGFrIEFkYSBJbnRlcm5ldCIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCWV4aXQoKQogCmRlZiBmb2xsb3coKToKIAoJdHJ5OgogCgkJdG9rZW4gPSBvcGVuKCJ0b2tlbi50eHQiLCJyIikucmVhZCgpCiAKCWV4Y2VwdCBJT0Vycm9yOgogCgkJamFsYW4oYmFsbW9uZCttKyIgVG9rZW4gS2FkYWx1YXJzYSIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCWxvZ2luKCkKIAoJdWlkID0gaW5wdXQoIlxuIitiYWxtb25kK2wrIiBNYXN1a2thbiBJRCBUYXJnZXQgOiAiKQogCgl0cnk6CiAKCQlqdW1sYWggPSBpbnQoaW5wdXQoYmFsbW9uZCtsKyIgTWF1IEFtYmlsIEJlcmFwYSBJRCA6ICIpKQogCgkJaWYganVtbGFoPjUwMDA6CiAKCQkJamFsYW4oYmFsbW9uZCttKyIgTWFrc2ltYWwgNTAwMCBJRCIpCiAKCQkJdGltZS5zbGVlcCgwLjUpCiAKCQkJZm9sbG93KCkKIAoJZXhjZXB0IFZhbHVlRXJyb3I6CiAKCQlqYWxhbihiYWxtb25kK20rIiBJbnB1dCBJbnZhbGlkIikKIAoJCXRpbWUuc2xlZXAoMC41KQogCgkJZm9sbG93KCkKIAoJdHJ5OgogCgkJYXN1ID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK3VpZCsiP2FjY2Vzc190b2tlbj0iK3Rva2VuKQogCgkJdHVsdWwgPSBqc29uLmxvYWRzKGFzdS50ZXh0KQogCgkJcHJpbnQoYmFsbW9uZCtsKyIgTmFtYSA6ICIrdHVsdWxbIm5hbWUiXSkKIAoJZXhjZXB0IEtleUVycm9yOgogCgkJcHJpbnQoYmFsbW9uZCttKyIgSUQgU2FsYWgiKQogCgkJdGltZS5zbGVlcCgwLjUpCiAKCQlmb2xsb3coKQogCglleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CiAKCQlqYWxhbihiYWxtb25kK20rIiBUaWRhayBBZGEgSW50ZXJuZXQiKQogCgkJdGltZS5zbGVlcCgwLjUpCiAKCQlleGl0KCkKIAoJdHJ5OgogCgkJYnVsdSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIit1aWQrIi9zdWJzY3JpYmVycz9saW1pdD0iK3N0cihqdW1sYWgpKyImYWNjZXNzX3Rva2VuPSIrdG9rZW4pCiAKCQlidXJpcSA9IGpzb24ubG9hZHMoYnVsdS50ZXh0KQogCgkJZm9yIGNldyBpbiBidXJpcVsiZGF0YSJdOgogCgkJCXRyeToKIAoJCQkJamFtZXQgPSBjZXdbImlkIl0KIAoJCQkJanVuZXQgPSBjZXdbIm5hbWUiXQogCgkJCQlpZC5hcHBlbmQoamFtZXQrInwiK2p1bmV0KQogCgkJCWV4Y2VwdDoKIAoJCQkJY29udGludWUKIAoJCXByaW50KGJhbG1vbmQrbCsiIFRvdGFsIElEIDogIitoKyIlcyIlKGxlbihpZCkpKQogCgkJbW9kZV9wYXNzd29yZCgpCiAKCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKIAoJCWphbGFuKGJhbG1vbmQrbSsiIFRpZGFrIEFkYSBJbnRlcm5ldCIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCWV4aXQoKQogCmRlZiBtYXNzYWwoKToKIAoJdHJ5OgogCgkJdG9rZW4gPSBvcGVuKCJ0b2tlbi50eHQiLCJyIikucmVhZCgpCiAKCWV4Y2VwdCBJT0Vycm9yOgogCgkJamFsYW4oYmFsbW9uZCttKyIgVG9rZW4gS2FkYWx1YXJzYSIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCWxvZ2luKCkKIAoJdHJ5OgogCgkJbmFkYSA9IGludChpbnB1dCgiXG4iK2JhbG1vbmQrbCsiIE1hdSBDcmFjayBCZXJhcGEgSUQgOiAiKSkKIAoJCWlmIG5hZGE+MTA6CiAKCQkJamFsYW4oYmFsbW9uZCttKyIgTWFrc2ltYWwgMTAgSUQiKQogCgkJCXRpbWUuc2xlZXAoMC41KQogCgkJCW1hc3NhbCgpCiAKCWV4Y2VwdCBWYWx1ZUVycm9yOgogCgkJamFsYW4oYmFsbW9uZCttKyIgSW5wdXQgSW52YWxpZCIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCW1hc3NhbCgpCiAKCWZvciBkb3QgaW4gcmFuZ2UobmFkYSk6CiAKCQlkb3QrPTEKIAoJCXRhbXB1bmcgPSBbXQogCgkJdWlkID0gaW5wdXQoYmFsbW9uZCtsKyIgTWFzdWtrYW4gSUQgVGFyZ2V0IEtlICVzIDogIiUoZG90KSkKIAoJCXRyeToKIAoJCQlhc3UgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIrdWlkKyI/YWNjZXNzX3Rva2VuPSIrdG9rZW4pCiAKCQkJdHVsdWwgPSBqc29uLmxvYWRzKGFzdS50ZXh0KQogCgkJCXByaW50KGJhbG1vbmQrbCsiIE5hbWEgOiAiK3R1bHVsWyJuYW1lIl0pCiAKCQlleGNlcHQgS2V5RXJyb3I6CiAKCQkJcHJpbnQoYmFsbW9uZCttKyIgSUQgU2FsYWgiKQogCgkJCXRpbWUuc2xlZXAoMC41KQogCgkJCWV4aXQoKQogCgkJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgogCgkJCWphbGFuKGJhbG1vbmQrbSsiIFRpZGFrIEFkYSBJbnRlcm5ldCIpCiAKCQkJdGltZS5zbGVlcCgwLjUpCiAKCQkJZXhpdCgpCiAKCQl0cnk6CiAKCQkJYnVsdSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIit1aWQrIi9mcmllbmRzP2xpbWl0PTEwMDAwJmFjY2Vzc190b2tlbj0iK3Rva2VuKQogCgkJCWJ1cmlxID0ganNvbi5sb2FkcyhidWx1LnRleHQpCiAKCQkJZm9yIGNldyBpbiBidXJpcVsiZGF0YSJdOgogCgkJCQl0cnk6CiAKCQkJCQlqYW1ldCA9IGNld1siaWQiXQogCgkJCQkJanVuZXQgPSBjZXdbIm5hbWUiXQogCgkJCQkJZGV0ZWMgPSBqYW1ldCsifCIranVuZXQKIAoJCQkJCWlmIGRldGVjIGluIGlkOgogCgkJCQkJCWNvbnRpbnVlCiAKCQkJCQllbHNlOgogCgkJCQkJCWlkLmFwcGVuZChqYW1ldCsifCIranVuZXQpCiAKCQkJCQkJdGFtcHVuZy5hcHBlbmQoamFtZXQrInwiK2p1bmV0KQogCgkJCQlleGNlcHQ6CiAKCQkJCQljb250aW51ZQogCgkJCXByaW50KGJhbG1vbmQrbCsiIFRvdGFsIElEIDogIitoKyIlc1xuIiUobGVuKHRhbXB1bmcpKSkKIAoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKIAoJCQlqYWxhbihiYWxtb25kK20rIiBUaWRhayBBZGEgSW50ZXJuZXQiKQogCgkJCXRpbWUuc2xlZXAoMC41KQogCgkJCWV4aXQoKQogCglwcmludChiYWxtb25kK2wrIiBKdW1sYWggVG90YWwgSUQgOiAiK2grIiVzIiUobGVuKGlkKSkpCiAKCW1vZGVfcGFzc3dvcmQoKQogCmRlZiBtb2RlX3Bhc3N3b3JkKCk6CiAKCW1vZGUgPSBpbnB1dCgiXG4iK2JhbG1vbmQrbCsiIENyYWNrIFBhc3N3b3JkIERlZmF1bHQgT3IgTWFudWFsIE9yIEdhYnVuZ2thbiAiK3MrInsiK0IrImQvbS9nIitzKyJ9IitsKyIgOiAiKQogCglpZiBtb2RlPT0iZCIgb3IgbW9kZT09IkQiOgogCgkJb3BzaSgpCiAKCWVsaWYgbW9kZT09Im0iIG9yIG1vZGU9PSJNIjoKIAoJCXByaW50KCJcbiIrYmFsbW9uZCtIKyIgTWFzdWtrYW4gUGFzc3dvcmQgTWFudWFsIikKIAoJCXByaW50KGJhbG1vbmQrTSsiIE1pbmltYW4gNiBLYXJha3RlciBEYWxhbSAxIFBhc3N3b3JkIikKIAoJCXByaW50KGJhbG1vbmQrSysiIENvbnRvaCA6ICIraysic2F5YW5nLGJpc21pbGxhaCxrYXRhc2FuZGkiKQogCgkJcHdhID0gaW5wdXQoYmFsbW9uZCtNKyIgUGFzc3dvcmQgTWFudWFsIDogIitoKyIiKQogCgkJY2V3ZSA9IHB3YS5zcGxpdCgiLCIpCiAKCQlpZiBsZW4oY2V3ZSk+NzoKIAoJCQlqYWxhbigiXG4iK2JhbG1vbmQrQisiIEphbmdhbiBTZXJha2FoIEJhbmcsIE1pbmltYWwgNyBQYXNzd29yZCBBamEiKQogCgkJCXRpbWUuc2xlZXAoMC41KQogCgkJCWV4aXQoKQogCgkJZm9yIGNvd29rIGluIGNld2U6CiAKCQkJaWYgbGVuKGNvd29rKT09MSBvciBsZW4oY293b2spPT0yIG9yIGxlbihjb3dvayk9PTMgb3IgbGVuKGNvd29rKT09NCBvciBsZW4oY293b2spPT01OgogCgkJCQlqYWxhbigiXG4iK2JhbG1vbmQrTSsiIERhbGFtIDEgUGFzc3dvcmQgTWluaW1hbCA2IEthcmFrdGVyIikKIAoJCQkJdGltZS5zbGVlcCgwLjUpCiAKCQkJCWV4aXQoKQogCgkJc2FuZGkuYXBwZW5kKHB3YSkKIAoJCW9wc2kyKCkKIAoJZWxpZiBtb2RlPT0iZyIgb3IgbW9kZT09IkciOgogCgkJcHJpbnQoIlxuIitiYWxtb25kK2wrIiBNYXN1a2thbiBQYXNzd29yZCBUYW1iYWhhbiIpCiAKCQlwcmludChiYWxtb25kK2wrIiBNaW5pbWFuIDYgS2FyYWt0ZXIgRGFsYW0gMSBQYXNzd29yZCIpCiAKCQlwcmludChiYWxtb25kK2wrIiBDb250b2ggOiAiK0grInNheWFuZyxiaXNtaWxsYWgsa2F0YXNhbmRpIikKIAoJCXB3YSA9IGlucHV0KGJhbG1vbmQrbCsiIFBhc3N3b3JkIFRhbWJhaGFuIDogIitCKyIiKQogCgkJY2V3ZSA9IHB3YS5zcGxpdCgiLCIpCiAKCQlpZiBsZW4oY2V3ZSk+NToKIAoJCQlqYWxhbigiXG4iK2JhbG1vbmQrbSsiIEphbmdhbiBTZXJha2FoIEJhbmcsIE1pbmltYWwgNSBQYXNzd29yZCBBamEiKQogCgkJCXRpbWUuc2xlZXAoMC41KQogCgkJCWV4aXQoKQogCgkJZm9yIGNvd29rIGluIGNld2U6CiAKCQkJaWYgbGVuKGNvd29rKT09MSBvciBsZW4oY293b2spPT0yIG9yIGxlbihjb3dvayk9PTMgb3IgbGVuKGNvd29rKT09NCBvciBsZW4oY293b2spPT01OgogCgkJCQlqYWxhbigiXG4iK2JhbG1vbmQrbSsiIERhbGFtIDEgUGFzc3dvcmQgTWluaW1hbCA2IEthcmFrdGVyIikKIAoJCQkJdGltZS5zbGVlcCgwLjUpCiAKCQkJCWV4aXQoKQogCgkJc2FuZGkuYXBwZW5kKHB3YSkKIAoJCW9wc2kzKCkKIAoJZWxzZToKIAoJCWphbGFuKGJhbG1vbmQrbSsiIFBpbGloIGQgQXRhdSBtIEF0YXUgZyIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCW1vZGVfcGFzc3dvcmQoKQogCmRlZiBvcHNpKCk6CiAKCW9wcyA9IGlucHV0KGJhbG1vbmQrbCsiIE11bmN1bGthbiBPcHNpICIraCsieyIraysieS90IitoKyJ9IitsKyIgOiAiKQogCglpZiBvcHM9PSJ5IiBvciBvcHM9PSJZIjoKIAoJCW9wc2l0LmFwcGVuZCgibXVuY3Vsa2FuIikKIAoJZWxpZiBvcHM9PSJ0IiBvciBvcHM9PSJUIjoKIAoJCW9wc2l0LmFwcGVuZCgiamFuZ2FuIikKIAoJZWxzZToKIAoJCWphbGFuKGJhbG1vbmQrbSsiIFBpbGloIFlhIEF0YXUgVGlkYWsiKQogCgkJdGltZS5zbGVlcCgwLjUpCiAKCQlvcHNpKCkKIAoJbW9kZV9jcmFjaygpCiAKZGVmIG9wc2kyKCk6CiAKICAgICAgICBvcHMgPSBpbnB1dCgiXG4iK2JhbG1vbmQrbCsiIE11bmN1bGthbiBPcHNpICIraCsieyIraysieS90IitoKyJ9IitsKyIgOiAiKQogCiAgICAgICAgaWYgb3BzPT0ieSIgb3Igb3BzPT0iWSI6CiAKICAgICAgICAgICAgICAgIG9wc2l0LmFwcGVuZCgibXVuY3Vsa2FuIikKIAogICAgICAgIGVsaWYgb3BzPT0idCIgb3Igb3BzPT0iVCI6CiAKICAgICAgICAgICAgICAgIG9wc2l0LmFwcGVuZCgiamFuZ2FuIikKIAogICAgICAgIGVsc2U6CiAKICAgICAgICAgICAgICAgIGphbGFuKGJhbG1vbmQrbSsiIFBpbGloIFlhIEF0YXUgVGlkYWsiKQogCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDAuNSkKIAogICAgICAgICAgICAgICAgb3BzaTIoKQogCiAgICAgICAgbW9kZV9jcmFjazIoKQogCmRlZiBvcHNpMygpOgogCiAgICAgICAgb3BzID0gaW5wdXQoIlxuIitiYWxtb25kK2wrIiBNdW5jdWxrYW4gT3BzaSAiK2grInsiK2srInkvdCIraCsifSIrbCsiIDogIikKIAogICAgICAgIGlmIG9wcz09InkiIG9yIG9wcz09IlkiOgogCiAgICAgICAgICAgICAgICBvcHNpdC5hcHBlbmQoIm11bmN1bGthbiIpCiAKICAgICAgICBlbGlmIG9wcz09InQiIG9yIG9wcz09IlQiOgogCiAgICAgICAgICAgICAgICBvcHNpdC5hcHBlbmQoImphbmdhbiIpCiAKICAgICAgICBlbHNlOgogCiAgICAgICAgICAgICAgICBqYWxhbihiYWxtb25kK20rIiBQaWxpaCBZYSBBdGF1IFRpZGFrIikKIAogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgwLjUpCiAKICAgICAgICAgICAgICAgIG9wc2kzKCkKIAogICAgICAgIG1vZGVfY3JhY2szKCkKIApkZWYgbW9kZV9jcmFjaygpOgogCglwcmludChzKyJcbnsiK20rIjEiK3MrIn0iK00rIiBNZXRob2QgQXBpICIrcysieyIrSysiRmFzdCIrcysifSIpCiAKCXByaW50KHMrIlxueyIrbSsiMiIrcysifSIrSCsiIE1ldGhvZCBNYmFzaWMgIitzKyJ7IitCKyJTbG93IitzKyJ9IikKIAoJcGlsaWggPSBpbnB1dCgiXG4iK2JhbG1vbmQrbCsiIFBpbGloIDogIikKIAoJaWYgcGlsaWg9PSIxIiBvciBwaWxpaD09IjAxIjoKIAoJCXByaW50KCJcbiIrYmFsbW9uZCtzKyIgVGVrYW4gIitoKyIneSciK3MrIiBKaWthIEluZ2luIE1lbmdndW5ha2FuIFJhbmRvbSBVc2VyIEFnZW50IikKIAoJCXByaW50KGJhbG1vbmQrdSsiIFRla2FuIEVudGVyIEppa2EgVGlkYWsgSW5naW4gTWVuZ2d1bmFrYW4gUmFuZG9tIFVzZXIgQWdlbnQiKQogCgkJYWdlbmt1ID0gaW5wdXQoYmFsbW9uZCtsKyIgR3VuYWthbiBVc2VyIEFnZW50IFJhbmRvbSAiK3MrInsiK3UrIlJlY29tZW5kZWQiK3MrIn0iK2wrIiA6ICIpCiAKCQlpZiBhZ2Vua3U9PSJ5IiBvciBhZ2Vua3U9PSJZIjoKIAoJCQlyYW5kb21fZ2FrLmFwcGVuZCgicmFuZG9tIikKIAoJCWVsc2U6CiAKCQkJa29waSA9ICJlbmFrIgogCgkJcHJpbnQoIlxuIitiYWxtb25kK2wrIiBDcmFjayBEaW11bGFpIikKIAoJCXByaW50KGJhbG1vbmQrbCsiIEppa2EgVGlkYWsgQWRhIFNBSkpBRCwgSGlkdXBrYW4gTW9kZSBQZXNhd2F0IDUgRGV0aWtcbiIpCiAKCQlkZWZhdWx0KCkKIAoJZWxpZiBwaWxpaD09IjIiIG9yIHBpbGloPT0iMDIiOgogCgkJcHJpbnQoIlxuIitiYWxtb25kK3MrIiBUZWthbiAiK2grIid5JyIrcysiIEppa2EgSW5naW4gTWVuZ2d1bmFrYW4gUmFuZG9tIFVzZXIgQWdlbnQiKQogCgkJcHJpbnQoYmFsbW9uZCt1KyIgVGVrYW4gRW50ZXIgSmlrYSBUaWRhayBJbmdpbiBNZW5nZ3VuYWthbiBSYW5kb20gVXNlciBBZ2VudCIpCiAKCQlhZ2Vua3UgPSBpbnB1dChiYWxtb25kK2wrIiBHdW5ha2FuIFVzZXIgQWdlbnQgUmFuZG9tICIrcysieyIrSCsiUmVjb21lbmRlZCIrcysifSIrbCsiIDogIikKIAoJCWlmIGFnZW5rdT09InkiIG9yIGFnZW5rdT09IlkiOgogCgkJCXJhbmRvbV9nYWsuYXBwZW5kKCJyYW5kb20iKQogCgkJZWxzZToKIAoJCQlrb3BpID0gImVuYWsiCiAKCQlwcmludCgiXG4iK2JhbG1vbmQraCsiIENyYWNrIERpbXVsYWkiKQogCgkJcHJpbnQoYmFsbW9uZCtsKyIgSmlrYSBUaWRhayBBZGEgU0FKSkFELCBIaWR1cGthbiBNb2RlIFBlc2F3YXQgNSBEZXRpa1xuIikKIAoJCWRlZmF1bHQyKCkKIAoJZWxzZToKIAoJCWphbGFuKGJhbG1vbmQrbCsiIFBpbGloYW4gSW52YWxpZCIpCiAKCQl0aW1lLnNsZWVwKDAuNSkKIAoJCW1vZGVfY3JhY2soKQogCmRlZiBtb2RlX2NyYWNrMigpOgogCiAgICAgICAgcHJpbnQocysiXG57IittKyIxIitzKyJ9IitsKyIgTWV0aG9kIEFwaSAiK3MrInsiK20rIkZhc3QiK3MrIn0iKQogCiAgICAgICAgcHJpbnQocysieyIrbSsiMiIrcysifSIrbCsiIE1ldGhvZCBNYmFzaWMgIitzKyJ7IittKyJTbG93IitzKyJ9IikKIAogICAgICAgIHBpbGloID0gaW5wdXQoIlxuIitiYWxtb25kK2wrIiBQaWxpaCA6ICIpCiAKICAgICAgICBpZiBwaWxpaD09IjEiIG9yIHBpbGloPT0iMDEiOgogCiAgICAgICAgICAgICAgICBwcmludCgiXG4iK2JhbG1vbmQrcysiIFRla2FuICIraCsiJ3knIitzKyIgSmlrYSBJbmdpbiBNZW5nZ3VuYWthbiBSYW5kb20gVXNlciBBZ2VudCIpCiAKICAgICAgICAgICAgICAgIHByaW50KGJhbG1vbmQrdSsiIFRla2FuIEVudGVyIEppa2EgVGlkYWsgSW5naW4gTWVuZ2d1bmFrYW4gUmFuZG9tIFVzZXIgQWdlbnQiKQogCiAgICAgICAgICAgICAgICBhZ2Vua3UgPSBpbnB1dChiYWxtb25kK2wrIiBHdW5ha2FuIFVzZXIgQWdlbnQgUmFuZG9tICIrcysieyIrdSsiUmVjb21lbmRlZCIrcysifSIrbCsiIDogIikKIAogICAgICAgICAgICAgICAgaWYgYWdlbmt1PT0ieSIgb3IgYWdlbmt1PT0iWSI6CiAKICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tX2dhay5hcHBlbmQoInJhbmRvbSIpCiAKICAgICAgICAgICAgICAgIGVsc2U6CiAKICAgICAgICAgICAgICAgICAgICAgICAga29waSA9ICJlbmFrIgogCiAgICAgICAgICAgICAgICBwcmludCgiXG4iK2JhbG1vbmQraCsiIENyYWNrIERpbXVsYWkiKQogCiAgICAgICAgICAgICAgICBwcmludChiYWxtb25kK2wrIiBKaWthIFRpZGFrIEFkYSBTQUpKQUQsIEhpZHVwa2FuIE1vZGUgUGVzYXdhdCA1IERldGlrXG4iKQogCiAgICAgICAgICAgICAgICBtYW51YWwoKQogCiAgICAgICAgZWxpZiBwaWxpaD09IjIiIG9yIHBpbGloPT0iMDIiOgogCiAgICAgICAgICAgICAgICBwcmludCgiXG4iK2JhbG1vbmQrcysiIFRla2FuICIraCsiJ3knIitzKyIgSmlrYSBJbmdpbiBNZW5nZ3VuYWthbiBSYW5kb20gVXNlciBBZ2VudCIpCiAKICAgICAgICAgICAgICAgIHByaW50KGJhbG1vbmQrdSsiIFRla2FuIEVudGVyIEppa2EgVGlkYWsgSW5naW4gTWVuZ2d1bmFrYW4gUmFuZG9tIFVzZXIgQWdlbnQiKQogCiAgICAgICAgICAgICAgICBhZ2Vua3UgPSBpbnB1dChiYWxtb25kK2wrIiBHdW5ha2FuIFVzZXIgQWdlbnQgUmFuZG9tICIrcysieyIrdSsiUmVjb21lbmRlZCIrcysifSIrbCsiIDogIikKIAogICAgICAgICAgICAgICAgaWYgYWdlbmt1PT0ieSIgb3IgYWdlbmt1PT0iWSI6CiAKICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tX2dhay5hcHBlbmQoInJhbmRvbSIpCiAKICAgICAgICAgICAgICAgIGVsc2U6CiAKICAgICAgICAgICAgICAgICAgICAgICAga29waSA9ICJlbmFrIgogCiAgICAgICAgICAgICAgICBwcmludCgiXG4iK2JhbG1vbmQraCsiIENyYWNrIERpbXVsYWkiKQogCiAgICAgICAgICAgICAgICBwcmludChiYWxtb25kK2wrIiBKaWthIFRpZGFrIEFkYSBTQUpKQUQsIEhpZHVwa2FuIE1vZGUgUGVzYXdhdCA1IERldGlrXG4iKQogCiAgICAgICAgICAgICAgICBtYW51YWwyKCkKIAogICAgICAgIGVsc2U6CiAKICAgICAgICAgICAgICAgIGphbGFuKGJhbG1vbmQrbCsiIFBpbGloYW4gSW52YWxpZCIpCiAKICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMC41KQogCiAgICAgICAgICAgICAgICBtb2RlX2NyYWNrMigpCiAKZGVmIG1vZGVfY3JhY2szKCk6CiAKICAgICAgICBwcmludChzKyJcbnsiK20rIjEiK3MrIn0iK2wrIiBNZXRob2QgQXBpICIrcysieyIrbSsiRmFzdCIrcysifSIpCiAKICAgICAgICBwcmludChzKyJ7IittKyIyIitzKyJ9IitsKyIgTWV0aG9kIE1iYXNpYyAiK3MrInsiK20rIlNsb3ciK3MrIn0iKQogCiAgICAgICAgcGlsaWggPSBpbnB1dCgiXG4iK2JhbG1vbmQrbCsiIFBpbGloIDogIikKIAogICAgICAgIGlmIHBpbGloPT0iMSIgb3IgcGlsaWg9PSIwMSI6CiAKICAgICAgICAgICAgICAgIHByaW50KCJcbiIrYmFsbW9uZCtzKyIgVGVrYW4gIitoKyIneSciK3MrIiBKaWthIEluZ2luIE1lbmdndW5ha2FuIFJhbmRvbSBVc2VyIEFnZW50IikKIAogICAgICAgICAgICAgICAgcHJpbnQoYmFsbW9uZCt1KyIgVGVrYW4gRW50ZXIgSmlrYSBUaWRhayBJbmdpbiBNZW5nZ3VuYWthbiBSYW5kb20gVXNlciBBZ2VudCIpCiAKICAgICAgICAgICAgICAgIGFnZW5rdSA9IGlucHV0KGJhbG1vbmQrbCsiIEd1bmFrYW4gVXNlciBBZ2VudCBSYW5kb20gIitzKyJ7Iit1KyJSZWNvbWVuZGVkIitzKyJ9IitsKyIgOiAiKQogCiAgICAgICAgICAgICAgICBpZiBhZ2Vua3U9PSJ5IiBvciBhZ2Vua3U9PSJZIjoKIAogICAgICAgICAgICAgICAgICAgICAgICByYW5kb21fZ2FrLmFwcGVuZCgicmFuZG9tIikKIAogICAgICAgICAgICAgICAgZWxzZToKIAogICAgICAgICAgICAgICAgICAgICAgICBrb3BpID0gImVuYWsiCiAKICAgICAgICAgICAgICAgIHByaW50KCJcbiIrYmFsbW9uZCtoKyIgQ3JhY2sgRGltdWxhaSIpCiAKICAgICAgICAgICAgICAgIHByaW50KGJhbG1vbmQrbCsiIEppa2EgVGlkYWsgQWRhIFNBSkpBRCwgSGlkdXBrYW4gTW9kZSBQZXNhd2F0IDUgRGV0aWtcbiIpCiAKICAgICAgICAgICAgICAgIGdhYnVuZ2thbigpCiAKICAgICAgICBlbGlmIHBpbGloPT0iMiIgb3IgcGlsaWg9PSIwMiI6CiAKICAgICAgICAgICAgICAgIHByaW50KCJcbiIrYmFsbW9uZCtzKyIgVGVrYW4gIitoKyIneSciK3MrIiBKaWthIEluZ2luIE1lbmdndW5ha2FuIFJhbmRvbSBVc2VyIEFnZW50IikKIAogICAgICAgICAgICAgICAgcHJpbnQoYmFsbW9uZCt1KyIgVGVrYW4gRW50ZXIgSmlrYSBUaWRhayBJbmdpbiBNZW5nZ3VuYWthbiBSYW5kb20gVXNlciBBZ2VudCIpCiAKICAgICAgICAgICAgICAgIGFnZW5rdSA9IGlucHV0KGJhbG1vbmQrbCsiIEd1bmFrYW4gVXNlciBBZ2VudCBSYW5kb20gIitzKyJ7Iit1KyJSZWNvbWVuZGVkIitzKyJ9IitsKyIgOiAiKQogCiAgICAgICAgICAgICAgICBpZiBhZ2Vua3U9PSJ5IiBvciBhZ2Vua3U9PSJZIjoKIAogICAgICAgICAgICAgICAgICAgICAgICByYW5kb21fZ2FrLmFwcGVuZCgicmFuZG9tIikKIAogICAgICAgICAgICAgICAgZWxzZToKIAogICAgICAgICAgICAgICAgICAgICAgICBrb3BpID0gImVuYWsiCiAKICAgICAgICAgICAgICAgIHByaW50KCJcbiIrYmFsbW9uZCtoKyIgQ3JhY2sgRGltdWxhaSIpCiAKICAgICAgICAgICAgICAgIHByaW50KGJhbG1vbmQrbCsiIEppa2EgVGlkYWsgQWRhIFNBSkpBRCwgSGlkdXBrYW4gTW9kZSBQZXNhd2F0IDUgRGV0aWtcbiIpCiAKICAgICAgICAgICAgICAgIGdhYnVuZ2thbjIoKQogCiAgICAgICAgZWxzZToKIAogICAgICAgICAgICAgICAgamFsYW4oYmFsbW9uZCtsKyIgUGlsaWhhbiBJbnZhbGlkIikKIAogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgwLjUpCiAKICAgICAgICAgICAgICAgIG1vZGVfY3JhY2szKCkKIApkZWYgZGVmYXVsdCgpOgogCglsb29wID0gMAogCgl3aXRoIFRocmVhZFBvb2xFeGVjdXRvcihtYXhfd29ya2Vycz0zMCkgYXMga2ludGlsOgogCgkJZm9yIHlmIGluIGlkOgogCgkJCWlkZCwgbmFtZWUgPSB5Zi5zcGxpdCgifCIpCiAKCQkJbG9vcCs9MQogCgkJCXBhc3QgPSBbXQogCgkJCWZvciB4ciBpbiBuYW1lZS5zcGxpdCgiICIpOgogCgkJCQlpZiBsZW4oeHIpPDM6CiAKCQkJCQljb250aW51ZQogCgkJCQllbHNlOgogCgkJCQkJeHIgPSB4ci5sb3dlcigpCiAKCQkJCQlpZiBsZW4oeHIpPT0zIG9yIGxlbih4cik9PTQgb3IgbGVuKHhyKT09NToKIAoJCQkJCQlwYXN0LmFwcGVuZCh4cisiMTIzIikKIAoJCQkJCQlwYXN0LmFwcGVuZCh4cisiMTIzNCIpCiAKCQkJCQkJcGFzdC5hcHBlbmQoeHIrIjEyMzQ1IikKIAoJCQkJCWVsc2U6CiAKCQkJCQkJcGFzdC5hcHBlbmQoeHIrIjEyMyIpCiAKCQkJCQkJcGFzdC5hcHBlbmQoeHIrIjEyMzQiKQogCgkJCQkJCXBhc3QuYXBwZW5kKHhyKyIxMjM0NSIpCiAKCQkJCQkJcGFzdC5hcHBlbmQoeHIpCiAKCQkJcGFzdC5hcHBlbmQobmFtZWUubG93ZXIoKSkKIAoJCQlraW50aWwuc3VibWl0KGFwaSwgaWRkLCBwYXN0LCBsb29wKQogCmRlZiBkZWZhdWx0MigpOgogCiAgICAgICAgbG9vcCA9IDAKIAogICAgICAgIHdpdGggVGhyZWFkUG9vbEV4ZWN1dG9yKG1heF93b3JrZXJzPTMwKSBhcyBraW50aWw6CiAKICAgICAgICAgICAgICAgIGZvciB5ZiBpbiBpZDoKIAogICAgICAgICAgICAgICAgICAgICAgICBpZGQsIG5hbWVlID0geWYuc3BsaXQoInwiKQogCiAgICAgICAgICAgICAgICAgICAgICAgIGxvb3ArPTEKIAogICAgICAgICAgICAgICAgICAgICAgICBwYXN0ID0gW10KIAogICAgICAgICAgICAgICAgICAgICAgICBmb3IgeHIgaW4gbmFtZWUuc3BsaXQoIiAiKToKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxlbih4cik8MzoKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhyID0geHIubG93ZXIoKQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBsZW4oeHIpPT0zIG9yIGxlbih4cik9PTQgb3IgbGVuKHhyKT09NToKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXN0LmFwcGVuZCh4cisiMTIzIikKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXN0LmFwcGVuZCh4cisiMTIzNCIpCiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzdC5hcHBlbmQoeHIrIjEyMzQ1IikKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXN0LmFwcGVuZCh4cisiMTIzIikKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXN0LmFwcGVuZCh4cisiMTIzNCIpCiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzdC5hcHBlbmQoeHIrIjEyMzQ1IikKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXN0LmFwcGVuZCh4cikKIAogICAgICAgICAgICAgICAgICAgICAgICBwYXN0LmFwcGVuZChuYW1lZS5sb3dlcigpKQogCiAgICAgICAgICAgICAgICAgICAgICAgIGtpbnRpbC5zdWJtaXQobWJhc2ljLCBpZGQsIHBhc3QsIGxvb3ApCiAKZGVmIG1hbnVhbCgpOgogCiAgICAgICAgbG9vcCA9IDAKIAogICAgICAgIHdpdGggVGhyZWFkUG9vbEV4ZWN1dG9yKG1heF93b3JrZXJzPTMwKSBhcyBraW50aWw6CiAKICAgICAgICAgICAgICAgIGZvciB5ZiBpbiBpZDoKIAogICAgICAgICAgICAgICAgICAgICAgICBpZGQsIG5hbWVlID0geWYuc3BsaXQoInwiKQogCiAgICAgICAgICAgICAgICAgICAgICAgIGxvb3ArPTEKIAogICAgICAgICAgICAgICAgICAgICAgICBwYXN0ID0gW10KIAogICAgICAgICAgICAgICAgICAgICAgICBmb3Igd2wgaW4gc2FuZGk6CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3bCA9IHdsLmxvd2VyKCkKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciBhaiBpbiB3bC5zcGxpdCgiLCIpOgogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXN0LmFwcGVuZChhaikKIAogICAgICAgICAgICAgICAgICAgICAgICBraW50aWwuc3VibWl0KGFwaSwgaWRkLCBwYXN0LCBsb29wKQogCmRlZiBtYW51YWwyKCk6CiAKICAgICAgICBsb29wID0gMAogCiAgICAgICAgd2l0aCBUaHJlYWRQb29sRXhlY3V0b3IobWF4X3dvcmtlcnM9MzApIGFzIGtpbnRpbDoKIAogICAgICAgICAgICAgICAgZm9yIHlmIGluIGlkOgogCiAgICAgICAgICAgICAgICAgICAgICAgIGlkZCwgbmFtZWUgPSB5Zi5zcGxpdCgifCIpCiAKICAgICAgICAgICAgICAgICAgICAgICAgbG9vcCs9MQogCiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3QgPSBbXQogCiAgICAgICAgICAgICAgICAgICAgICAgIGZvciB3bCBpbiBzYW5kaToKIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdsID0gd2wubG93ZXIoKQogCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIGFqIGluIHdsLnNwbGl0KCIsIik6CiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3QuYXBwZW5kKGFqKQogCiAgICAgICAgICAgICAgICAgICAgICAgIGtpbnRpbC5zdWJtaXQobWJhc2ljLCBpZGQsIHBhc3QsIGxvb3ApCiAKZGVmIGdhYnVuZ2thbigpOgogCglsb29wID0gMAogCgl3aXRoIFRocmVhZFBvb2xFeGVjdXRvcihtYXhfd29ya2Vycz0zMCkgYXMga2ludGlsOgogCgkJZm9yIHlmIGluIGlkOgogCgkJCWlkZCwgbmFtZWUgPSB5Zi5zcGxpdCgifCIpCiAKCQkJbG9vcCs9MQogCgkJCXBhc3QgPSBbXQogCgkJCWZvciB4ciBpbiBuYW1lZS5zcGxpdCgiICIpOgogCgkJCQlpZiBsZW4oeHIpPDM6CiAKCQkJCQljb250aW51ZQogCgkJCQllbHNlOgogCgkJCQkJeHIgPSB4ci5sb3dlcigpCiAKCQkJCQlpZiBsZW4oeHIpPT0zIG9yIGxlbih4cik9PTQgb3IgbGVuKHhyKT09NToKIAoJCQkJCQlwYXN0LmFwcGVuZCh4cisiMTIzIikKIAoJCQkJCQlwYXN0LmFwcGVuZCh4cisiMTIzNCIpCiAKCQkJCQkJcGFzdC5hcHBlbmQoeHIrIjEyMzQ1IikKIAoJCQkJCWVsc2U6CiAKCQkJCQkJcGFzdC5hcHBlbmQoeHIrIjEyMyIpCiAKCQkJCQkJcGFzdC5hcHBlbmQoeHIrIjEyMzQiKQogCgkJCQkJCXBhc3QuYXBwZW5kKHhyKyIxMjM0NSIpCiAKCQkJCQkJcGFzdC5hcHBlbmQoeHIpCiAKCQkJcGFzdC5hcHBlbmQobmFtZWUubG93ZXIoKSkKIAoJCQlmb3IgY2ljYWsgaW4gc2FuZGk6CiAKCQkJCWNpY2FrID0gY2ljYWsubG93ZXIoKQogCgkJCQlmb3Igc2VtdXQgaW4gY2ljYWsuc3BsaXQoIiwiKToKIAoJCQkJCXBhc3QuYXBwZW5kKHNlbXV0KQogCgkJCWtpbnRpbC5zdWJtaXQoYXBpLCBpZGQsIHBhc3QsIGxvb3ApCiAKZGVmIGdhYnVuZ2thbjIoKToKIAoJbG9vcCA9IDAKIAoJd2l0aCBUaHJlYWRQb29sRXhlY3V0b3IobWF4X3dvcmtlcnM9MzApIGFzIGtpbnRpbDoKIAoJCWZvciB5ZiBpbiBpZDoKIAoJCQlpZGQsIG5hbWVlID0geWYuc3BsaXQoInwiKQogCgkJCWxvb3ArPTEKIAoJCQlwYXN0ID0gW10KIAoJCQlmb3IgeHIgaW4gbmFtZWUuc3BsaXQoIiAiKToKIAoJCQkJaWYgbGVuKHhyKTwzOgogCgkJCQkJY29udGludWUKIAoJCQkJZWxzZToKIAoJCQkJCXhyID0geHIubG93ZXIoKQogCgkJCQkJaWYgbGVuKHhyKT09MyBvciBsZW4oeHIpPT00IG9yIGxlbih4cik9PTU6CiAKCQkJCQkJcGFzdC5hcHBlbmQoeHIrIjEyMyIpCiAKCQkJCQkJcGFzdC5hcHBlbmQoeHIrIjEyMzQiKQogCgkJCQkJCXBhc3QuYXBwZW5kKHhyKyIxMjM0NSIpCiAKCQkJCQllbHNlOgogCgkJCQkJCXBhc3QuYXBwZW5kKHhyKyIxMjMiKQogCgkJCQkJCXBhc3QuYXBwZW5kKHhyKyIxMjM0IikKIAoJCQkJCQlwYXN0LmFwcGVuZCh4cisiMTIzNDUiKQogCgkJCQkJCXBhc3QuYXBwZW5kKHhyKQogCgkJCXBhc3QuYXBwZW5kKG5hbWVlLmxvd2VyKCkpCiAKCQkJZm9yIGNpY2FrIGluIHNhbmRpOgogCgkJCQljaWNhayA9IGNpY2FrLmxvd2VyKCkKIAoJCQkJZm9yIHNlbXV0IGluIGNpY2FrLnNwbGl0KCIsIik6CiAKCQkJCQlwYXN0LmFwcGVuZChzZW11dCkKIAoJCQlraW50aWwuc3VibWl0KG1iYXNpYywgaWRkLCBwYXN0LCBsb29wKQogCmRlZiBhcGkodWlkLHB3eCxsb29wKToKIAoJaWYgInJhbmRvbSIgaW4gcmFuZG9tX2dhazoKIAoJCXVhID0gcmFuZG9tLmNob2ljZShrYWxvX3JhbmRvbSkucmVwbGFjZSgiXG4iLCIiKQogCgllbHNlOgogCgkJdHJ5OgogCgkJCXVhID0gb3BlbigidXNlci50eHQiLCJyIikucmVhZCgpCiAKCQlleGNlcHQgSU9FcnJvcjoKIAoJCQl1YSA9ICJNb3ppbGxhLzUuMCAoU3ltYmlhbk9TLzkuMzsgU2VyaWVzNjAvMy4yIE5va2lhRTUyLTEvMDUyLjAwMzsgUHJvZmlsZS9NSURQLTIuMSBDb25maWd1cmF0aW9uL0NMREMtMS4xICkgQXBwbGVXZWJLaXQvNTI1IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi8zLjAgQnJvd3Nlck5HLzcuMi42LjIgM2dwcC1nYmEiCiAKCWluaV9wZXJzZW4gPSBmbG9hdChsb29wKSoxMDAKIAoJcGVyc2VubnlhID0gZmxvYXQoaW5pX3BlcnNlbikvZmxvYXQobGVuKGlkKSkKIAoJcGVyc2Vua3UgPSBzdHIocGVyc2VubnlhKS5zcGxpdCgiLiIpCiAKCW5wYyA9IHBlcnNlbmt1WzFdCiAKCWlmIGxlbihucGMpPT0xIGFuZCBucGM9PSIwIjoKIAoJCXBlcnNlbiA9IHBlcnNlbmt1WzBdKyIlIgogCgllbHNlOgogCgkJaWYgbGVuKG5wYyk9PTE6CiAKCQkJcGVyc2VuID0gcGVyc2Vua3VbMF0rIi4iK25wYysiJSIKIAoJCWVsc2U6CiAKCQkJcGVyc2VuID0gcGVyc2Vua3VbMF0rIi4iK25wY1swXStucGNbMV0rIiUiCiAKCWxvbGlrdSA9IGRhdGV0aW1lLm5vdygpCiAKCW1pbml0ID0gbG9saWt1Lm1pbnV0ZQogCglkaXRpayA9IGxvbGlrdS5zZWNvbmQKIAoJaWYgbG9vcD09MzUgb3IgbG9vcD09NDU6CiAKCQlzZW1vZ2EuYXBwZW5kKHN0cihtaW5pdCkrIiwiK3N0cihkaXRpaykpCiAKCWlmIGxvb3A9PTQ3OgogCgkJbXVsYWksc2VsZXNhaSA9IHNlbW9nYVswXSxzZW1vZ2FbMV0KIAoJCXRpa3VuZyA9IG11bGFpLnNwbGl0KCIsIikKIAoJCW1vZGFsID0gc2VsZXNhaS5zcGxpdCgiLCIpCiAKCQlpZiB0aWt1bmdbMF09PW1vZGFsWzBdOgogCgkJCWRldCA9IGZsb2F0KG1vZGFsWzFdKS1mbG9hdCh0aWt1bmdbMV0pCiAKCQllbHNlOgogCgkJCW1peGVyID0gZmxvYXQobW9kYWxbMF0pLWZsb2F0KHRpa3VuZ1swXSkKIAoJCQltaXhpbmcgPSBtaXhlcio2MC4wCiAKCQkJZHVyaWFuID0gNjAuMC1mbG9hdCh0aWt1bmdbMV0pK2Zsb2F0KG1vZGFsWzFdKQogCgkJCWRldCA9IG1peGluZytkdXJpYW4KIAoJCWlmIGRldD09MC4wOgogCgkJCW5paGggPSBkZXQrMC43CiAKCQkJYmVyYXBhX2QuYXBwZW5kKG5paGgpCiAKCQllbHNlOgogCgkJCWJlcmFwYV9kLmFwcGVuZChkZXQpCiAKCWVsc2U6CiAKCQlkZXQgPSAiLSIKIAoJaWYgbGVuKGJlcmFwYV9kKT09MDoKIAoJCWRldHQgPSAiLSIKIAoJZWxzZToKIAoJCWZvciBhbmdrYSBpbiBiZXJhcGFfZDoKIAoJCQloaXR0ID0gZmxvYXQoYW5na2EpLzEwCiAKCQkJaHV0dCA9IGxlbihpZCktbG9vcAogCgkJCWR1dHQgPSBoaXR0Kmh1dHQKIAoJCQlkb3R0ID0gc3RyKGR1dHQpCiAKCQkJZGl0dCA9IGRvdHQuc3BsaXQoIi4iKQogCgkJCWlmIGR1dHQ+MzU5OToKIAoJCQkJY3V0dCA9IGR1dHQvMzYwMC4wCiAKCQkJCWp1dHQgPSBzdHIoY3V0dCkuc3BsaXQoIi4iKQogCgkJCQlqaXR0ID0ganV0dFsxXQogCgkJCQlpZiBsZW4oanV0dFsxXSk9PTEgYW5kIGp1dHRbMV09PSIwIjoKIAoJCQkJCWRldHQgPSBqdXR0WzBdKyJqIgogCgkJCQllbHNlOgogCgkJCQkJZGV0dCA9IGp1dHRbMF0rIi4iK2ppdHRbMF0rImoiCiAKCQkJZWxpZiBkdXR0PjU5IGFuZCBkdXR0PDM2MDA6CiAKCQkJCWN1dHQgPSBkdXR0LzYwLjAKIAoJCQkJanV0dCA9IHN0cihjdXR0KS5zcGxpdCgiLiIpCiAKCQkJCWppdHQgPSBqdXR0WzFdCiAKCQkJCWlmIGxlbihqdXR0WzFdKT09MSBhbmQganV0dFsxXT09IjAiOgogCgkJCQkJZGV0dCA9IGp1dHRbMF0rIm0iCiAKCQkJCWVsc2U6CiAKCQkJCQlkZXR0ID0ganV0dFswXSsiLiIraml0dFswXSsibSIKIAoJCQllbGlmIGR1dHQ+MCBhbmQgZHV0dDw2MDoKIAoJCQkJZGV0dCA9IGRpdHRbMF0rImQiCiAKCXByaW50KHMrIlxyeyIrdSsiQ2hhbiIrcysifSAiK2wrIiVzLyVzIE9LOiVzIENQOiVzICVzWyVzJXMlc10gWyVzJXMlc10iJShsb29wLGxlbihpZCksbGVuKG9rKSxsZW4oY3ApLGgsayxwZXJzZW4saCxrLGRldHQsaCksIGVuZD0nICcpO3N5cy5zdGRvdXQuZmx1c2goKQogCglzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKIAoJZm9yIHB3IGluIHB3eDoKIAoJCXRyeToKIAoJCQloZWFkZXJzXyA9IHsieC1mYi1jb25uZWN0aW9uLWJhbmR3aWR0aCI6IHN0cihyYW5kb20ucmFuZGludCgyMDAwMDAwMC4wLCAzMDAwMDAwMC4wKSksICJ4LWZiLXNpbS1obmkiOiBzdHIocmFuZG9tLnJhbmRpbnQoMjAwMDAsIDQwMDAwKSksICJ4LWZiLW5ldC1obmkiOiBzdHIocmFuZG9tLnJhbmRpbnQoMjAwMDAsIDQwMDAwKSksICJ4LWZiLWNvbm5lY3Rpb24tcXVhbGl0eSI6ICJFWENFTExFTlQiLCAieC1mYi1jb25uZWN0aW9uLXR5cGUiOiAiY2VsbC5DVFJhZGlvQWNjZXNzVGVjaG5vbG9neUhTRFBBIiwgInVzZXItYWdlbnQiOiB1YSwgImNvbnRlbnQtdHlwZSI6ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLCAieC1mYi1odHRwLWVuZ2luZSI6ICJMaWdlciJ9CiAKCQkJYXBpID0gJ2h0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luJwogCgkJCXBhcmFtcyA9IHsnYWNjZXNzX3Rva2VuJzogJzM1MDY4NTUzMTcyOCU3QzYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJywgICdmb3JtYXQnOiAnSlNPTicsICdzZGtfdmVyc2lvbic6ICcyJywgJ2VtYWlsJzogdWlkLCAnbG9jYWxlJzogJ2VuX1VTJywgJ3Bhc3N3b3JkJzogcHcsICdzZGsnOiAnaW9zJywgJ2dlbmVyYXRlX3Nlc3Npb25fY29va2llcyc6ICcxJywgJ3NpZyc6ICczZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNid9CiAKCQkJcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQoYXBpLCBwYXJhbXM9cGFyYW1zLCBoZWFkZXJzPWhlYWRlcnNfKQogCgkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHJlc3BvbnNlLnRleHQgYW5kICdFQUFBJyBpbiByZXNwb25zZS50ZXh0OgogCgkJCQlpZiAib2xkIiBpbiBvbGRfZ2FrOgogCgkJCQkJaWYgbGVuKHVpZCk9PTY6CiAKCQkJCQkJdGFodW5ueWEgPSBqb2luZWRfeWVhclswXQogCgkJCQkJZWxpZiBsZW4odWlkKT09NzoKIAoJCQkJCQl0YWh1bm55YSA9IGpvaW5lZF95ZWFyWzFdCiAKCQkJCQllbGlmIGxlbih1aWQpPT04OgogCgkJCQkJCXRhaHVubnlhID0gam9pbmVkX3llYXJbMl0KIAoJCQkJCWVsaWYgbGVuKHVpZCk9PTk6CiAKCQkJCQkJdGFodW5ueWEgPSBqb2luZWRfeWVhclszXQogCgkJCQkJZWxpZiBsZW4odWlkKT09MTA6CiAKCQkJCQkJdGFodW5ueWEgPSBqb2luZWRfeWVhcls0XQogCgkJCQkJZWxpZiBsZW4odWlkKT09MTU6CiAKCQkJCQkJdGFodW5ueWEgPSBqb2luZWRfeWVhcls1XQogCgkJCQkJcHJpbnQoaCsiXHJ7IitrKyJvayIraCsifSIraCsiICIrdWlkK2srIiA+PCAiK2grcHcraysiID48ICIraCt0YWh1bm55YSsiICAgICAgICAgICIpCiAKCQkJCQlidHMgPSBvcGVuKCJTQUpKQURfT2svT0tfJXMudHh0IiUoaGNrKSwiYSIpO2J0cy53cml0ZSh1aWQrIj4iK3B3KyJcbiIpO2J0cy5jbG9zZSgpCiAKCQkJCQlvay5hcHBlbmQodWlkKyJ8IitwdykKIAoJCQkJZWxzZToKIAoJCQkJCXByaW50KGgrIlxyeyIraysib2siK2grIn0iK2grIiAiK3VpZCtrKyIgPjwgIitoK3B3K2srIiA+PCAiK2grcmVzcG9uc2UuanNvbigpWyJhY2Nlc3NfdG9rZW4iXSkKIAoJCQkJCWJ0cyA9IG9wZW4oIlNBSkpBRF9Pay9PS18lcy50eHQiJShoY2spLCJhIik7YnRzLndyaXRlKHVpZCsiPiIrcHcrIlxuIik7YnRzLmNsb3NlKCkKIAoJCQkJCW9rLmFwcGVuZCh1aWQrInwiK3B3KQogCgkJCQlicmVhawogCgkJCWVsaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHJlc3BvbnNlLmpzb24oKVsnZXJyb3JfbXNnJ106CiAKCQkJCWlmIGxlbih1aWQpPT02OgogCgkJCQkJdGFodW5ueWEgPSBqb2luZWRfeWVhclswXQogCgkJCQllbGlmIGxlbih1aWQpPT03OgogCgkJCQkJdGFodW5ueWEgPSBqb2luZWRfeWVhclsxXQogCgkJCQllbGlmIGxlbih1aWQpPT04OgogCgkJCQkJdGFodW5ueWEgPSBqb2luZWRfeWVhclsyXQogCgkJCQllbGlmIGxlbih1aWQpPT05OgogCgkJCQkJdGFodW5ueWEgPSBqb2luZWRfeWVhclszXQogCgkJCQllbGlmIGxlbih1aWQpPT0xMDoKIAoJCQkJCXRhaHVubnlhID0gam9pbmVkX3llYXJbNF0KIAoJCQkJZWxpZiBsZW4odWlkKT09MTU6CiAKCQkJCQl0YWh1bm55YSA9IGpvaW5lZF95ZWFyWzVdCiAKCQkJCWVsc2U6CiAKCQkJCQl0YWh1bm55YSA9ICJub250eXBlIgogCgkJCQlpZiAiamFuZ2FuIiBpbiBvcHNpdDoKIAoJCQkJCXRyeToKIAoJCQkJCQl0dGwgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIrdWlkKyI/YWNjZXNzX3Rva2VuPSIramloYW4pCiAKCQkJCQkJbWFudGFwID0ganNvbi5sb2Fkcyh0dGwudGV4dCkKIAoJCQkJCQliYWNvdCA9IG1hbnRhcFsiYmlydGhkYXkiXQogCgkJCQkJCWxhaGlyID0gYmFjb3Quc3BsaXQoIi8iKQogCgkJCQkJCWlmIGxlbihsYWhpcik9PTI6CiAKCQkJCQkJCW5hbWFfYnVsYW4gPSBpbmRhaFtpbnQobGFoaXJbMF0pXQogCgkJCQkJCQlpZiAib2xkIiBpbiBvbGRfZ2FrOgogCgkJCQkJCQkJcHJpbnQocysiXHJ7IitrKyJjcCIrcysifSIrbCsiICIrdWlkK2srIiA+PCAiK2wrcHcraysiID48ICIrbCtsYWhpclsxXSsiICIrbmFtYV9idWxhbitrKyIgPjwgIitsK3RhaHVubnlhKQogCgkJCQkJCQkJYnRzID0gb3BlbigiU0FKSkFEX0NwL0NQXyVzLnR4dCIlKGhjayksImEiKTtidHMud3JpdGUodWlkKyI+IitwdysiPiIrbGFoaXJbMV0rIiAiK25hbWFfYnVsYW4rIlxuIik7YnRzLmNsb3NlKCkKIAoJCQkJCQkJCWNwLmFwcGVuZCh1aWQrInwiK3B3KQogCgkJCQkJCQllbHNlOgogCgkJCQkJCQkJcHJpbnQocysiXHJ7IitrKyJjcCIrcysifSIrbCsiICIrdWlkK2srIiA+PCAiK2wrcHcraysiID48ICIrbCtsYWhpclsxXSsiICIrbmFtYV9idWxhbikKIAoJCQkJCQkJCWJ0cyA9IG9wZW4oIlNBSkpBRF9DcC9DUF8lcy50eHQiJShoY2spLCJhIik7YnRzLndyaXRlKHVpZCsiPiIrcHcrIj4iK2xhaGlyWzFdKyIgIituYW1hX2J1bGFuKyJcbiIpO2J0cy5jbG9zZSgpCiAKCQkJCQkJCQljcC5hcHBlbmQodWlkKyJ8IitwdykKIAoJCQkJCQllbHNlOgogCgkJCQkJCQluYW1hX2J1bGFuID0gaW5kYWhbaW50KGxhaGlyWzBdKV0KIAoJCQkJCQkJaWYgIm9sZCIgaW4gb2xkX2dhazoKIAoJCQkJCQkJCXByaW50KHMrIlxyeyIraysiY3AiK3MrIn0iK2wrIiAiK3VpZCtrKyIgPjwgIitsK3B3K2srIiA+PCAiK2wrbGFoaXJbMV0rIiAiK25hbWFfYnVsYW4rIiAiK2xhaGlyWzJdK2srIiA+PCAiK2wrdGFodW5ueWEpCiAKCQkJCQkJCQlidHMgPSBvcGVuKCJTQUpKQURfQ3AvQ1BfJXMudHh0IiUoaGNrKSwiYSIpO2J0cy53cml0ZSh1aWQrIj4iK3B3KyI+IitsYWhpclsxXSsiICIrbmFtYV9idWxhbisiICIrbGFoaXJbMl0rIlxuIik7YnRzLmNsb3NlKCkKIAoJCQkJCQkJCWNwLmFwcGVuZCh1aWQrInwiK3B3KQogCgkJCQkJCQllbHNlOgogCgkJCQkJCQkJcHJpbnQocysiXHJ7IitrKyJjcCIrcysifSIrbCsiICIrdWlkK2srIiA+PCAiK2wrcHcraysiID48ICIrbCtsYWhpclsxXSsiICIrbmFtYV9idWxhbisiICIrbGFoaXJbMl0pCiAKCQkJCQkJCQlidHMgPSBvcGVuKCJTQUpKQURfQ3AvQ1BfJXMudHh0IiUoaGNrKSwiYSIpO2J0cy53cml0ZSh1aWQrIj4iK3B3KyI+IitsYWhpclsxXSsiICIrbmFtYV9idWxhbisiICIrbGFoaXJbMl0rIlxuIik7YnRzLmNsb3NlKCkKIAoJCQkJCQkJCWNwLmFwcGVuZCh1aWQrInwiK3B3KQogCgkJCQkJZXhjZXB0IChLZXlFcnJvcixJT0Vycm9yKToKIAoJCQkJCQlpZiAib2xkIiBpbiBvbGRfZ2FrOgogCgkJCQkJCQlwcmludChzKyJccnsiK2srImNwIitzKyJ9IitsKyIgIit1aWQraysiID48ICIrbCtwdytrKyIgPjwgIitsK3RhaHVubnlhKyIgICAgICAgICAgIikKIAoJCQkJCQkJYnRzID0gb3BlbigiU0FKSkFEX0NwL0NQXyVzLnR4dCIlKGhjayksImEiKTtidHMud3JpdGUodWlkKyI+IitwdysiXG4iKTtidHMuY2xvc2UoKQogCgkJCQkJCQljcC5hcHBlbmQodWlkKyJ8IitwdykKIAoJCQkJCQllbHNlOgogCgkJCQkJCQlwcmludChzKyJccnsiK2srImNwIitzKyJ9IitsKyIgIit1aWQraysiID48ICIrbCtwdysiICAgICAgICAgICIpCiAKCQkJCQkJCWJ0cyA9IG9wZW4oIlNBSkpBRF9DcC9DUF8lcy50eHQiJShoY2spLCJhIik7YnRzLndyaXRlKHVpZCsiPiIrcHcrIlxuIik7YnRzLmNsb3NlKCkKIAoJCQkJCQkJY3AuYXBwZW5kKHVpZCsifCIrcHcpCiAKCQkJCWVsaWYgIm11bmN1bGthbiIgaW4gb3BzaXQ6CiAKCQkJCQl0cnk6CiAKCQkJCQkJdHRsID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK3VpZCsiP2FjY2Vzc190b2tlbj0iK2ppaGFuKQogCgkJCQkJCW1hbnRhcCA9IGpzb24ubG9hZHModHRsLnRleHQpCiAKCQkJCQkJYmFjb3QgPSBtYW50YXBbImJpcnRoZGF5Il0KIAoJCQkJCQlsYWhpciA9IGJhY290LnNwbGl0KCIvIikKIAoJCQkJCQljZWtlcl90dGwodWlkLHB3LHVhLGxhaGlyLHRhaHVubnlhKQogCgkJCQkJZXhjZXB0IChLZXlFcnJvcixJT0Vycm9yKToKIAoJCQkJCQljZWtlcih1aWQscHcsdWEsdGFodW5ueWEpCiAKCQkJCWJyZWFrCiAKCQkJZWxzZToKIAoJCQkJY29udGludWUKIAoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKIAoJCQl0aW1lLnNsZWVwKDMxKQogCmRlZiBtYmFzaWModWlkLHB3eCxsb29wKToKIAoJaWYgInJhbmRvbSIgaW4gcmFuZG9tX2dhazoKIAoJCXVhID0gcmFuZG9tLmNob2ljZShrYWxvX3JhbmRvbSkucmVwbGFjZSgiXG4iLCIiKQogCgllbHNlOgogCgkJdHJ5OgogCgkJCXVhID0gb3BlbigidXNlci50eHQiLCJyIikucmVhZCgpCiAKCQlleGNlcHQgSU9FcnJvcjoKIAoJCQl1YSA9ICJNb3ppbGxhLzUuMCAoU3ltYmlhbk9TLzkuMzsgU2VyaWVzNjAvMy4yIE5va2lhRTUyLTEvMDUyLjAwMzsgUHJvZmlsZS9NSURQLTIuMSBDb25maWd1cmF0aW9uL0NMREMtMS4xICkgQXBwbGVXZWJLaXQvNTI1IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi8zLjAgQnJvd3Nlck5HLzcuMi42LjIgM2dwcC1nYmEiCiAKCWluaV9wZXJzZW4gPSBmbG9hdChsb29wKSoxMDAKIAoJcGVyc2VubnlhID0gZmxvYXQoaW5pX3BlcnNlbikvZmxvYXQobGVuKGlkKSkKIAoJcGVyc2Vua3UgPSBzdHIocGVyc2VubnlhKS5zcGxpdCgiLiIpCiAKCW5wYyA9IHBlcnNlbmt1WzFdCiAKCWlmIGxlbihucGMpPT0xIGFuZCBucGM9PSIwIjoKIAoJCXBlcnNlbiA9IHBlcnNlbmt1WzBdKyIlIgogCgllbHNlOgogCgkJaWYgbGVuKG5wYyk9PTE6CiAKCQkJcGVyc2VuID0gcGVyc2Vua3VbMF0rIi4iK25wYysiJSIKIAoJCWVsc2U6CiAKCQkJcGVyc2VuID0gcGVyc2Vua3VbMF0rIi4iK25wY1swXStucGNbMV0rIiUiCiAKCWxvbGlrdSA9IGRhdGV0aW1lLm5vdygpCiAKCW1pbml0ID0gbG9saWt1Lm1pbnV0ZQogCglkaXRpayA9IGxvbGlrdS5zZWNvbmQKIAoJaWYgbG9vcD09MzUgb3IgbG9vcD09NDU6CiAKCQlzZW1vZ2EuYXBwZW5kKHN0cihtaW5pdCkrIiwiK3N0cihkaXRpaykpCiAKCWlmIGxvb3A9PTQ3OgogCgkJbXVsYWksc2VsZXNhaSA9IHNlbW9nYVswXSxzZW1vZ2FbMV0KIAoJCXRpa3VuZyA9IG11bGFpLnNwbGl0KCIsIikKIAoJCW1vZGFsID0gc2VsZXNhaS5zcGxpdCgiLCIpCiAKCQlpZiB0aWt1bmdbMF09PW1vZGFsWzBdOgogCgkJCWRldCA9IGZsb2F0KG1vZGFsWzFdKS1mbG9hdCh0aWt1bmdbMV0pCiAKCQllbHNlOgogCgkJCW1peGVyID0gZmxvYXQobW9kYWxbMF0pLWZsb2F0KHRpa3VuZ1swXSkKIAoJCQltaXhpbmcgPSBtaXhlcio2MC4wCiAKCQkJZHVyaWFuID0gNjAuMC1mbG9hdCh0aWt1bmdbMV0pK2Zsb2F0KG1vZGFsWzFdKQogCgkJCWRldCA9IG1peGluZytkdXJpYW4KIAoJCWlmIGRldD09MC4wOgogCgkJCW5paGggPSBkZXQrMC43CiAKCQkJYmVyYXBhX2QuYXBwZW5kKG5paGgpCiAKCQllbHNlOgogCgkJCWJlcmFwYV9kLmFwcGVuZChkZXQpCiAKCWVsc2U6CiAKCQlkZXQgPSAiLSIKIAoJaWYgbGVuKGJlcmFwYV9kKT09MDoKIAoJCWRldHQgPSAiLSIKIAoJZWxzZToKIAoJCWZvciBhbmdrYSBpbiBiZXJhcGFfZDoKIAoJCQloaXR0ID0gZmxvYXQoYW5na2EpLzEwCiAKCQkJaHV0dCA9IGxlbihpZCktbG9vcAogCgkJCWR1dHQgPSBoaXR0Kmh1dHQKIAoJCQlkb3R0ID0gc3RyKGR1dHQpCiAKCQkJZGl0dCA9IGRvdHQuc3BsaXQoIi4iKQogCgkJCWlmIGR1dHQ+MzU5OToKIAoJCQkJY3V0dCA9IGR1dHQvMzYwMC4wCiAKCQkJCWp1dHQgPSBzdHIoY3V0dCkuc3BsaXQoIi4iKQogCgkJCQlqaXR0ID0ganV0dFsxXQogCgkJCQlpZiBsZW4oanV0dFsxXSk9PTEgYW5kIGp1dHRbMV09PSIwIjoKIAoJCQkJCWRldHQgPSBqdXR0WzBdKyJqIgogCgkJCQllbHNlOgogCgkJCQkJZGV0dCA9IGp1dHRbMF0rIi4iK2ppdHRbMF0rImoiCiAKCQkJZWxpZiBkdXR0PjU5IGFuZCBkdXR0PDM2MDA6CiAKCQkJCWN1dHQgPSBkdXR0LzYwLjAKIAoJCQkJanV0dCA9IHN0cihjdXR0KS5zcGxpdCgiLiIpCiAKCQkJCWppdHQgPSBqdXR0WzFdCiAKCQkJCWlmIGxlbihqdXR0WzFdKT09MSBhbmQganV0dFsxXT09IjAiOgogCgkJCQkJZGV0dCA9IGp1dHRbMF0rIm0iCiAKCQkJCWVsc2U6CiAKCQkJCQlkZXR0ID0ganV0dFswXSsiLiIraml0dFswXSsibSIKIAoJCQllbGlmIGR1dHQ+MCBhbmQgZHV0dDw2MDoKIAoJCQkJZGV0dCA9IGRpdHRbMF0rImQiCiAKCXByaW50KHMrIlxyeyIrdSsiQ2hhbiIrcysifSAiK2wrIiVzLyVzIE9LOiVzIENQOiVzICVzWyVzJXMlc10gWyVzJXMlc10iJShsb29wLGxlbihpZCksbGVuKG9rKSxsZW4oY3ApLGgsayxwZXJzZW4saCxrLGRldHQsaCksIGVuZD0nICcpO3N5cy5zdGRvdXQuZmx1c2goKQogCglzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKIAoJZm9yIHB3IGluIHB3eDoKIAoJCXRyeToKIAoJCQlzZXMuaGVhZGVycy51cGRhdGUoeyJIb3N0IjoibWJhc2ljLmZhY2Vib29rLmNvbSIsImNhY2hlLWNvbnRyb2wiOiJtYXgtYWdlPTAiLCJ1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzIjoiMSIsInVzZXItYWdlbnQiOnVhLCJhY2NlcHQiOiJ0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44IiwiYWNjZXB0LWVuY29kaW5nIjoiZ3ppcCwgZGVmbGF0ZSIsImFjY2VwdC1sYW5ndWFnZSI6ImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43In0pCiAKCQkJcCA9IHNlcy5nZXQoImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbSIpCiAKCQkJYiA9IHNlcy5wb3N0KCJodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20vbG9naW4ucGhwIiwgZGF0YT17ImVtYWlsIjogdWlkLCAicGFzcyI6IHB3LCAibG9naW4iOiAic3VibWl0In0pCiAKCQkJaWYgImNfdXNlciIgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCk6CiAKCQkJCWt1a2kgPSAoIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKIAoJCQkJaWYgIm9sZCIgaW4gb2xkX2dhazoKIAoJCQkJCWlmIGxlbih1aWQpPT02OgogCgkJCQkJCXRhaHVubnlhID0gam9pbmVkX3llYXJbMF0KIAoJCQkJCWVsaWYgbGVuKHVpZCk9PTc6CiAKCQkJCQkJdGFodW5ueWEgPSBqb2luZWRfeWVhclsxXQogCgkJCQkJZWxpZiBsZW4odWlkKT09ODoKIAoJCQkJCQl0YWh1bm55YSA9IGpvaW5lZF95ZWFyWzJdCiAKCQkJCQllbGlmIGxlbih1aWQpPT05OgogCgkJCQkJCXRhaHVubnlhID0gam9pbmVkX3llYXJbM10KIAoJCQkJCWVsaWYgbGVuKHVpZCk9PTEwOgogCgkJCQkJCXRhaHVubnlhID0gam9pbmVkX3llYXJbNF0KIAoJCQkJCWVsaWYgbGVuKHVpZCk9PTE1OgogCgkJCQkJCXRhaHVubnlhID0gam9pbmVkX3llYXJbNV0KIAoJCQkJCXByaW50KHMrIlxyeyIraysib2siK3MrIn0iK2grIiAiK3VpZCtrKyIgPjwgIitoK3B3K2srIiA+PCAiK2grdGFodW5ueWErIiAgICAgICAgICAiKQogCgkJCQkJYnRzID0gb3BlbigiU0FKSkFEX09rL09LXyVzLnR4dCIlKGhjayksImEiKTtidHMud3JpdGUodWlkKyI+IitwdysiXG4iKTtidHMuY2xvc2UoKQogCgkJCQkJb2suYXBwZW5kKHVpZCsifCIrcHcpCiAKCQkJCWVsc2U6CiAKCQkJCQlwcmludChzKyJccnsiK2srIm9rIitzKyJ9IitoKyIgIit1aWQraysiID48ICIraCtwdytrKyIgPjwgIitoK2t1a2kpCiAKCQkJCQlidHMgPSBvcGVuKCJTQUpKQURfT2svT0tfJXMudHh0IiUoaGNrKSwiYSIpO2J0cy53cml0ZSh1aWQrIj4iK3B3KyJcbiIpO2J0cy5jbG9zZSgpCiAKCQkJCQlvay5hcHBlbmQodWlkKyJ8IitwdykKIAoJCQkJYnJlYWsKIAoJCQllbGlmICJjaGVja3BvaW50IiBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLmtleXMoKToKIAoJCQkJaWYgbGVuKHVpZCk9PTY6CiAKCQkJCQl0YWh1bm55YSA9IGpvaW5lZF95ZWFyWzBdCiAKCQkJCWVsaWYgbGVuKHVpZCk9PTc6CiAKCQkJCQl0YWh1bm55YSA9IGpvaW5lZF95ZWFyWzFdCiAKCQkJCWVsaWYgbGVuKHVpZCk9PTg6CiAKCQkJCQl0YWh1bm55YSA9IGpvaW5lZF95ZWFyWzJdCiAKCQkJCWVsaWYgbGVuKHVpZCk9PTk6CiAKCQkJCQl0YWh1bm55YSA9IGpvaW5lZF95ZWFyWzNdCiAKCQkJCWVsaWYgbGVuKHVpZCk9PTEwOgogCgkJCQkJdGFodW5ueWEgPSBqb2luZWRfeWVhcls0XQogCgkJCQllbGlmIGxlbih1aWQpPT0xNToKIAoJCQkJCXRhaHVubnlhID0gam9pbmVkX3llYXJbNV0KIAoJCQkJZWxzZToKIAoJCQkJCXRhaHVubnlhID0gIm5vbnR5cGUiCiAKCQkJCWlmICJqYW5nYW4iIGluIG9wc2l0OgogCgkJCQkJdHJ5OgogCgkJCQkJCXR0bCA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIit1aWQrIj9hY2Nlc3NfdG9rZW49IitqaWhhbikKIAoJCQkJCQltYW50YXAgPSBqc29uLmxvYWRzKHR0bC50ZXh0KQogCgkJCQkJCWJhY290ID0gbWFudGFwWyJiaXJ0aGRheSJdCiAKCQkJCQkJbGFoaXIgPSBiYWNvdC5zcGxpdCgiLyIpCiAKCQkJCQkJaWYgbGVuKGxhaGlyKT09MjoKIAoJCQkJCQkJbmFtYV9idWxhbiA9IGluZGFoW2ludChsYWhpclswXSldCiAKCQkJCQkJCWlmICJvbGQiIGluIG9sZF9nYWs6CiAKCQkJCQkJCQlwcmludChzKyJccnsiK2srImNwIitzKyJ9IitsKyIgIit1aWQraysiID48ICIrbCtwdytrKyIgPjwgIitsK2xhaGlyWzFdKyIgIituYW1hX2J1bGFuK2srIiA+PCAiK2wrdGFodW5ueWEpCiAKCQkJCQkJCQlidHMgPSBvcGVuKCJTQUpKQURfQ3AvQ1BfJXMudHh0IiUoaGNrKSwiYSIpO2J0cy53cml0ZSh1aWQrIj4iK3B3KyI+IitsYWhpclsxXSsiICIrbmFtYV9idWxhbisiXG4iKTtidHMuY2xvc2UoKQogCgkJCQkJCQkJY3AuYXBwZW5kKHVpZCsifCIrcHcpCiAKCQkJCQkJCWVsc2U6CiAKCQkJCQkJCQlwcmludChzKyJccnsiK2srImNwIitzKyJ9IitsKyIgIit1aWQraysiID48ICIrbCtwdytrKyIgPjwgIitsK2xhaGlyWzFdKyIgIituYW1hX2J1bGFuKQogCgkJCQkJCQkJYnRzID0gb3BlbigiU0FKSkFEX0NwL0NQXyVzLnR4dCIlKGhjayksImEiKTtidHMud3JpdGUodWlkKyI+IitwdysiPiIrbGFoaXJbMV0rIiAiK25hbWFfYnVsYW4rIlxuIik7YnRzLmNsb3NlKCkKIAoJCQkJCQkJCWNwLmFwcGVuZCh1aWQrInwiK3B3KQogCgkJCQkJCWVsc2U6CiAKCQkJCQkJCW5hbWFfYnVsYW4gPSBpbmRhaFtpbnQobGFoaXJbMF0pXQogCgkJCQkJCQlpZiAib2xkIiBpbiBvbGRfZ2FrOgogCgkJCQkJCQkJcHJpbnQocysiXHJ7IitrKyJjcCIrcysifSIrbCsiICIrdWlkK2srIiA+PCAiK2wrcHcraysiID48ICIrbCtsYWhpclsxXSsiICIrbmFtYV9idWxhbisiICIrbGFoaXJbMl0raysiID48ICIrbCt0YWh1bm55YSkKIAoJCQkJCQkJCWJ0cyA9IG9wZW4oIlNBSkpBRF9DcC9DUF8lcy50eHQiJShoY2spLCJhIik7YnRzLndyaXRlKHVpZCsiPiIrcHcrIj4iK2xhaGlyWzFdKyIgIituYW1hX2J1bGFuKyIgIitsYWhpclsyXSsiXG4iKTtidHMuY2xvc2UoKQogCgkJCQkJCQkJY3AuYXBwZW5kKHVpZCsifCIrcHcpCiAKCQkJCQkJCWVsc2U6CiAKCQkJCQkJCQlwcmludChzKyJccnsiK2srImNwIitzKyJ9IitsKyIgIit1aWQraysiID48ICIrbCtwdytrKyIgPjwgIitsK2xhaGlyWzFdKyIgIituYW1hX2J1bGFuKyIgIitsYWhpclsyXSkKIAoJCQkJCQkJCWJ0cyA9IG9wZW4oIlNBSkpBRF9DcC9DUF8lcy50eHQiJShoY2spLCJhIik7YnRzLndyaXRlKHVpZCsiPiIrcHcrIj4iK2xhaGlyWzFdKyIgIituYW1hX2J1bGFuKyIgIitsYWhpclsyXSsiXG4iKTtidHMuY2xvc2UoKQogCgkJCQkJCQkJY3AuYXBwZW5kKHVpZCsifCIrcHcpCiAKCQkJCQlleGNlcHQgKEtleUVycm9yLElPRXJyb3IpOgogCgkJCQkJCWlmICJvbGQiIGluIG9sZF9nYWs6CiAKCQkJCQkJCXByaW50KHMrIlxyeyIraysiY3AiK3MrIn0iK2wrIiAiK3VpZCtrKyIgPjwgIitsK3B3K2srIiA+PCAiK2wrdGFodW5ueWErIiAgICAgICAgICAiKQogCgkJCQkJCQlidHMgPSBvcGVuKCJTQUpKQURfQ3AvQ1BfJXMudHh0IiUoaGNrKSwiYSIpO2J0cy53cml0ZSh1aWQrIj4iK3B3KyJcbiIpO2J0cy5jbG9zZSgpCiAKCQkJCQkJCWNwLmFwcGVuZCh1aWQrInwiK3B3KQogCgkJCQkJCWVsc2U6CiAKCQkJCQkJCXByaW50KHMrIlxyeyIraysiY3AiK3MrIn0iK2wrIiAiK3VpZCtrKyIgPjwgIitsK3B3KyIgICAgICAgICAgIikKIAoJCQkJCQkJYnRzID0gb3BlbigiU0FKSkFEX0NwL0NQXyVzLnR4dCIlKGhjayksImEiKTtidHMud3JpdGUodWlkKyI+IitwdysiXG4iKTtidHMuY2xvc2UoKQogCgkJCQkJCQljcC5hcHBlbmQodWlkKyJ8IitwdykKIAoJCQkJZWxpZiAibXVuY3Vsa2FuIiBpbiBvcHNpdDoKIAoJCQkJCXRyeToKIAoJCQkJCQl0dGwgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIrdWlkKyI/YWNjZXNzX3Rva2VuPSIramloYW4pCiAKCQkJCQkJbWFudGFwID0ganNvbi5sb2Fkcyh0dGwudGV4dCkKIAoJCQkJCQliYWNvdCA9IG1hbnRhcFsiYmlydGhkYXkiXQogCgkJCQkJCWxhaGlyID0gYmFjb3Quc3BsaXQoIi8iKQogCgkJCQkJCWNla2VyX3R0bCh1aWQscHcsdWEsbGFoaXIsdGFodW5ueWEpCiAKCQkJCQlleGNlcHQgKEtleUVycm9yLElPRXJyb3IpOgogCgkJCQkJCWNla2VyKHVpZCxwdyx1YSx0YWh1bm55YSkKIAoJCQkJYnJlYWsKIAoJCQllbHNlOgogCgkJCQljb250aW51ZQogCgkJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgogCgkJCXRpbWUuc2xlZXAoMzEpCiAKZGVmIGNla2VyKHVpZCxwdyx1YSx0YWh1bm55YSk6CiAKCXVzZXIgPSB1aWQKIAoJcGFzdyA9IHB3CiAKCW1iID0gKCJodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20iKQogCglzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKIAoJc2VzLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6ICJtYmFzaWMuZmFjZWJvb2suY29tIiwiY2FjaGUtY29udHJvbCI6ICJtYXgtYWdlPTAiLCJ1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzIjogIjEiLCJvcmlnaW4iOiBtYiwiY29udGVudC10eXBlIjogImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsInVzZXItYWdlbnQiOiB1YSwiYWNjZXB0IjogInRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkiLCJ4LXJlcXVlc3RlZC13aXRoIjogIm1hcmsudmlhLmdwIiwic2VjLWZldGNoLXNpdGUiOiAic2FtZS1vcmlnaW4iLCJzZWMtZmV0Y2gtbW9kZSI6ICJuYXZpZ2F0ZSIsInNlYy1mZXRjaC11c2VyIjogIj8xIiwic2VjLWZldGNoLWRlc3QiOiAiZG9jdW1lbnQiLCJyZWZlcmVyIjogbWIrIi9sb2dpbi8/bmV4dCZyZWY9ZGJsJmZsJnJlZmlkPTgiLCJhY2NlcHQtZW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSIsImFjY2VwdC1sYW5ndWFnZSI6ICJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyJ9KQogCglkYXRhID0ge30KIAoJZ2VkID0gcGFyc2VyKHNlcy5nZXQobWIrIi9sb2dpbi8/bmV4dCZyZWY9ZGJsJmZsJnJlZmlkPTgiLCBoZWFkZXJzPXsidXNlci1hZ2VudCI6dWF9KS50ZXh0LCAiaHRtbC5wYXJzZXIiKQogCglmbSA9IGdlZC5maW5kKCJmb3JtIix7Im1ldGhvZCI6InBvc3QifSkKIAoJbGlzdCA9IFsibHNkIiwiamF6b2VzdCIsIm1fdHMiLCJsaSIsInRyeV9udW1iZXIiLCJ1bnJlY29nbml6ZWRfdHJpZXMiLCJsb2dpbiIsImJpX3hyd2giXQogCglmb3IgaSBpbiBmbS5maW5kX2FsbCgiaW5wdXQiKToKIAoJCWlmIGkuZ2V0KCJuYW1lIikgaW4gbGlzdDoKIAoJCQlkYXRhLnVwZGF0ZSh7aS5nZXQoIm5hbWUiKTppLmdldCgidmFsdWUiKX0pCiAKCQllbHNlOgogCgkJCWNvbnRpbnVlCiAKCWRhdGEudXBkYXRlKHsiZW1haWwiOnVzZXIsInBhc3MiOnBhc3d9KQogCglydW4gPSBwYXJzZXIoc2VzLnBvc3QobWIrZm0uZ2V0KCJhY3Rpb24iKSwgZGF0YT1kYXRhLCBhbGxvd19yZWRpcmVjdHM9VHJ1ZSkudGV4dCwgImh0bWwucGFyc2VyIikKIAoJaWYgImNoZWNrcG9pbnQiIGluIHNlcy5jb29raWVzOgogCgkJZm9ybSA9IHJ1bi5maW5kKCJmb3JtIikKIAoJCWR0c2cgPSBmb3JtLmZpbmQoImlucHV0Iix7Im5hbWUiOiJmYl9kdHNnIn0pWyJ2YWx1ZSJdCiAKCQlqenN0ID0gZm9ybS5maW5kKCJpbnB1dCIseyJuYW1lIjoiamF6b2VzdCJ9KVsidmFsdWUiXQogCgkJbmggICA9IGZvcm0uZmluZCgiaW5wdXQiLHsibmFtZSI6Im5oIn0pWyJ2YWx1ZSJdCiAKCQlkYXRhRCA9IHsiZmJfZHRzZyI6IGR0c2csImZiX2R0c2ciOiBkdHNnLCJqYXpvZXN0IjoganpzdCwiamF6b2VzdCI6IGp6c3QsImNoZWNrcG9pbnRfZGF0YSI6IiIsInN1Ym1pdFtDb250aW51ZV0iOiJMYW5qdXRrYW4iLCJuaCI6IG5ofQogCgkJeG54eCA9IHBhcnNlcihzZXMucG9zdChtYitmb3JtWyJhY3Rpb24iXSwgZGF0YT1kYXRhRCkudGV4dCwgImh0bWwucGFyc2VyIikKIAoJCW5nZXcgPSBbeXkudGV4dCBmb3IgeXkgaW4geG54eC5maW5kX2FsbCgib3B0aW9uIildCiAKCQlpZiAib2xkIiBpbiBvbGRfZ2FrOgogCgkJCXByaW50KHMrIlxyeyIraysiY3AiK3MrIn0iK2wrIiAiK3VpZCtrKyIgPjwgIitsK3B3K2srIiA+PCAiK2wrdGFodW5ueWErIiAgICAgICAgICAiKQogCgkJCWJ0cyA9IG9wZW4oIlNBSkpBRF9DcC9DUF8lcy50eHQiJShoY2spLCJhIik7YnRzLndyaXRlKHVpZCsiPiIrcHcrIlxuIik7YnRzLmNsb3NlKCkKIAoJCQljcC5hcHBlbmQodWlkKyJ8IitwdykKIAoJCWVsc2U6CiAKCQkJcHJpbnQocysiXHJ7IitrKyJjcCIrcysifSIrbCsiICIrdWlkK2srIiA+PCAiK2wrcHcrIiAgICAgICAgICAiKQogCgkJCWJ0cyA9IG9wZW4oIlNBSkpBRF9DcC9DUF8lcy50eHQiJShoY2spLCJhIik7YnRzLndyaXRlKHVpZCsiPiIrcHcrIlxuIik7YnRzLmNsb3NlKCkKIAoJCQljcC5hcHBlbmQodWlkKyJ8IitwdykKIAoJCWZvciBvcHQgaW4gcmFuZ2UobGVuKG5nZXcpKToKIAoJCQlwcmludCgiXHIiK2JhbG1vbmQrbCsiICAgIituZ2V3W29wdF0pCiAKCQlpZiAiMCIgaW4gc3RyKGxlbihuZ2V3KSk6cHJpbnQoIlxyIitiYWxtb25kK2wrIiAgICIraCsiVGFwIFllcyBOaWggQm9zIikKIAoJCXByaW50KCJcciIraCtiYXRhcykKIApkZWYgY2VrZXJfdHRsKHVpZCxwdyx1YSxsYWhpcix0YWh1bm55YSk6CiAKCXVzZXIgPSB1aWQKIAoJcGFzdyA9IHB3CiAKCW1iID0gKCJodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20iKQogCglzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKIAoJc2VzLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6ICJtYmFzaWMuZmFjZWJvb2suY29tIiwiY2FjaGUtY29udHJvbCI6ICJtYXgtYWdlPTAiLCJ1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzIjogIjEiLCJvcmlnaW4iOiBtYiwiY29udGVudC10eXBlIjogImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsInVzZXItYWdlbnQiOiB1YSwiYWNjZXB0IjogInRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkiLCJ4LXJlcXVlc3RlZC13aXRoIjogIm1hcmsudmlhLmdwIiwic2VjLWZldGNoLXNpdGUiOiAic2FtZS1vcmlnaW4iLCJzZWMtZmV0Y2gtbW9kZSI6ICJuYXZpZ2F0ZSIsInNlYy1mZXRjaC11c2VyIjogIj8xIiwic2VjLWZldGNoLWRlc3QiOiAiZG9jdW1lbnQiLCJyZWZlcmVyIjogbWIrIi9sb2dpbi8/bmV4dCZyZWY9ZGJsJmZsJnJlZmlkPTgiLCJhY2NlcHQtZW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSIsImFjY2VwdC1sYW5ndWFnZSI6ICJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyJ9KQogCglkYXRhID0ge30KIAoJZ2VkID0gcGFyc2VyKHNlcy5nZXQobWIrIi9sb2dpbi8/bmV4dCZyZWY9ZGJsJmZsJnJlZmlkPTgiLCBoZWFkZXJzPXsidXNlci1hZ2VudCI6dWF9KS50ZXh0LCAiaHRtbC5wYXJzZXIiKQogCglmbSA9IGdlZC5maW5kKCJmb3JtIix7Im1ldGhvZCI6InBvc3QifSkKIAoJbGlzdCA9IFsibHNkIiwiamF6b2VzdCIsIm1fdHMiLCJsaSIsInRyeV9udW1iZXIiLCJ1bnJlY29nbml6ZWRfdHJpZXMiLCJsb2dpbiIsImJpX3hyd2giXQogCglmb3IgaSBpbiBmbS5maW5kX2FsbCgiaW5wdXQiKToKIAoJCWlmIGkuZ2V0KCJuYW1lIikgaW4gbGlzdDoKIAoJCQlkYXRhLnVwZGF0ZSh7aS5nZXQoIm5hbWUiKTppLmdldCgidmFsdWUiKX0pCiAKCQllbHNlOgogCgkJCWNvbnRpbnVlCiAKCWRhdGEudXBkYXRlKHsiZW1haWwiOnVzZXIsInBhc3MiOnBhc3d9KQogCglydW4gPSBwYXJzZXIoc2VzLnBvc3QobWIrZm0uZ2V0KCJhY3Rpb24iKSwgZGF0YT1kYXRhLCBhbGxvd19yZWRpcmVjdHM9VHJ1ZSkudGV4dCwgImh0bWwucGFyc2VyIikKIAoJaWYgImNoZWNrcG9pbnQiIGluIHNlcy5jb29raWVzOgogCgkJZm9ybSA9IHJ1bi5maW5kKCJmb3JtIikKIAoJCWR0c2cgPSBmb3JtLmZpbmQoImlucHV0Iix7Im5hbWUiOiJmYl9kdHNnIn0pWyJ2YWx1ZSJdCiAKCQlqenN0ID0gZm9ybS5maW5kKCJpbnB1dCIseyJuYW1lIjoiamF6b2VzdCJ9KVsidmFsdWUiXQogCgkJbmggICA9IGZvcm0uZmluZCgiaW5wdXQiLHsibmFtZSI6Im5oIn0pWyJ2YWx1ZSJdCiAKCQlkYXRhRCA9IHsiZmJfZHRzZyI6IGR0c2csImZiX2R0c2ciOiBkdHNnLCJqYXpvZXN0IjoganpzdCwiamF6b2VzdCI6IGp6c3QsImNoZWNrcG9pbnRfZGF0YSI6IiIsInN1Ym1pdFtDb250aW51ZV0iOiJMYW5qdXRrYW4iLCJuaCI6IG5ofQogCgkJeG54eCA9IHBhcnNlcihzZXMucG9zdChtYitmb3JtWyJhY3Rpb24iXSwgZGF0YT1kYXRhRCkudGV4dCwgImh0bWwucGFyc2VyIikKIAoJCW5nZXcgPSBbeXkudGV4dCBmb3IgeXkgaW4geG54eC5maW5kX2FsbCgib3B0aW9uIildCiAKCQlpZiBsZW4obGFoaXIpPT0yOgogCgkJCW5hbWFfYnVsYW4gPSBpbmRhaFtpbnQobGFoaXJbMF0pXQogCgkJCWlmICJvbGQiIGluIG9sZF9nYWs6CiAKCQkJCXByaW50KHMrIlxyeyIraysiY3AiK3MrIn0iK2wrIiAiK3VpZCtrKyIgPjwgIitsK3B3K2srIiA+PCAiK2wrbGFoaXJbMV0rIiAiK25hbWFfYnVsYW4raysiID48ICIrbCt0YWh1bm55YSkKIAoJCQkJYnRzID0gb3BlbigiU0FKSkFEX0NwL0NQXyVzLnR4dCIlKGhjayksImEiKTtidHMud3JpdGUodWlkKyI+IitwdysiPiIrbGFoaXJbMV0rIiAiK25hbWFfYnVsYW4rIlxuIik7YnRzLmNsb3NlKCkKIAoJCQkJY3AuYXBwZW5kKHVpZCsifCIrcHcpCiAKCQkJZWxzZToKIAoJCQkJcHJpbnQocysiXHJ7IitrKyJjcCIrcysifSIrbCsiICIrdWlkK2srIiA+PCAiK2wrcHcraysiID48ICIrbCtsYWhpclsxXSsiICIrbmFtYV9idWxhbikKIAoJCQkJYnRzID0gb3BlbigiU0FKSkFEX0NwL0NQXyVzLnR4dCIlKGhjayksImEiKTtidHMud3JpdGUodWlkKyI+IitwdysiPiIrbGFoaXJbMV0rIiAiK25hbWFfYnVsYW4rIlxuIik7YnRzLmNsb3NlKCkKIAoJCQkJY3AuYXBwZW5kKHVpZCsifCIrcHcpCiAKCQllbHNlOgogCgkJCW5hbWFfYnVsYW4gPSBpbmRhaFtpbnQobGFoaXJbMF0pXQogCgkJCWlmICJvbGQiIGluIG9sZF9nYWs6CiAKCQkJCXByaW50KHMrIlxyeyIraysiY3AiK3MrIn0iK2wrIiAiK3VpZCtrKyIgPjwgIitsK3B3K2srIiA+PCAiK2wrbGFoaXJbMV0rIiAiK25hbWFfYnVsYW4rIiAiK2xhaGlyWzJdK2srIiA+PCAiK2wrdGFodW5ueWEpCiAKCQkJCWJ0cyA9IG9wZW4oIlNBSkpBRF9DcC9DUF8lcy50eHQiJShoY2spLCJhIik7YnRzLndyaXRlKHVpZCsiPiIrcHcrIj4iK2xhaGlyWzFdKyIgIituYW1hX2J1bGFuKyIgIitsYWhpclsyXSsiXG4iKTtidHMuY2xvc2UoKQogCgkJCQljcC5hcHBlbmQodWlkKyJ8IitwdykKIAoJCQllbHNlOgogCgkJCQlwcmludChzKyJccnsiK2srImNwIitzKyJ9IitsKyIgIit1aWQraysiID48ICIrbCtwdytrKyIgPjwgIitsK2xhaGlyWzFdKyIgIituYW1hX2J1bGFuKyIgIitsYWhpclsyXSkKIAoJCQkJYnRzID0gb3BlbigiU0FKSkFEX0NwL0NQXyVzLnR4dCIlKGhjayksImEiKTtidHMud3JpdGUodWlkKyI+IitwdysiPiIrbGFoaXJbMV0rIiAiK25hbWFfYnVsYW4rIiAiK2xhaGlyWzJdKyJcbiIpO2J0cy5jbG9zZSgpCiAKCQkJCWNwLmFwcGVuZCh1aWQrInwiK3B3KQogCgkJZm9yIG9wdCBpbiByYW5nZShsZW4obmdldykpOgogCgkJCXByaW50KCJcciIrYmFsbW9uZCtsKyIgICAiK25nZXdbb3B0XSkKIAoJCWlmICIwIiBpbiBzdHIobGVuKG5nZXcpKTpwcmludCgiXHIiK2JhbG1vbmQrbCsiICAgIitoKyJUYXAgWWVzIE5paCBCb3MiKQogCgkJcHJpbnQoIlxyIitoK2JhdGFzKQogCmRlZiBjZWtfb3BzaSgpOgogCglsb29wID0gMAogCglwcmludCgiXG4iK2JhbG1vbmQrbCsiIE1hc3Vra2FuIE5hbWEgRmlsZSIpCiAKCXByaW50KGJhbG1vbmQrbCsiIENvbnRvaCA6ICIraysiU0FKSkFEX0NwL0NQXyVzLnR4dCIlKGhjaykpCiAKCWlucCA9IGlucHV0KGJhbG1vbmQrbCsiIE5hbWEgRmlsZSA6ICIraCkKIAoJdHJ5OgogCgkJdGVzID0gb3BlbihpbnAsInIiKS5yZWFkbGluZXMoKQogCglleGNlcHQgSU9FcnJvcjoKIAoJCWphbGFuKCJcbiIrYmFsbW9uZCttKyIgRmlsZSBUaWRhayBBZGEiKQogCgkJdGltZS5zbGVlcCgwLjUpCiAKCQltZW51KCkKIAoJcHJpbnQoYmFsbW9uZCtsKyIgVGVyZGFwYXQgOiAiK2srIiVzIEFrdW4iJShsZW4odGVzKSkpCiAKCXByaW50KCIiKQogCglmb3IgY2ludGEgaW4gdGVzOgogCgkJbG9vcCs9MQogCgkJc2F5YW5nID0gY2ludGEucmVwbGFjZSgiXG4iLCIiKQogCgkJZ2VtZXMgPSBzYXlhbmcuc3BsaXQoIj4iKQogCgkJeWF1ZGFoKGdlbWVzWzBdLGdlbWVzWzFdLGxvb3AsdGVzKQogCmRlZiB5YXVkYWgodXNlcixwYXN3LGxvb3AsdGVzKToKIAoJbWIgPSAoImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbSIpCiAKCXRyeToKIAoJCXVhID0gb3BlbigidXNlci50eHQiLCJyIikucmVhZCgpCiAKCWV4Y2VwdCBJT0Vycm9yOgogCgkJdWEgPSAiTW96aWxsYS81LjAgKFN5bWJpYW5PUy85LjM7IFNlcmllczYwLzMuMiBOb2tpYUU1Mi0xLzA1Mi4wMDM7IFByb2ZpbGUvTUlEUC0yLjEgQ29uZmlndXJhdGlvbi9DTERDLTEuMSApIEFwcGxlV2ViS2l0LzUyNSAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vMy4wIEJyb3dzZXJORy83LjIuNi4yIDNncHAtZ2JhIgogCglzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKIAoJcHJpbnQocysiXHJ7IitrKyJDRUsiK3MrIn0gIitsKyJ7JXN9IERhcmkgeyVzfSIlKGxvb3AsbGVuKHRlcykpLCBlbmQ9JyAnKTtzeXMuc3Rkb3V0LmZsdXNoKCkKIAoJdHJ5OgogCgkJc2VzLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6ICJtYmFzaWMuZmFjZWJvb2suY29tIiwiY2FjaGUtY29udHJvbCI6ICJtYXgtYWdlPTAiLCJ1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzIjogIjEiLCJvcmlnaW4iOiBtYiwiY29udGVudC10eXBlIjogImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsInVzZXItYWdlbnQiOiB1YSwiYWNjZXB0IjogInRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkiLCJ4LXJlcXVlc3RlZC13aXRoIjogIm1hcmsudmlhLmdwIiwic2VjLWZldGNoLXNpdGUiOiAic2FtZS1vcmlnaW4iLCJzZWMtZmV0Y2gtbW9kZSI6ICJuYXZpZ2F0ZSIsInNlYy1mZXRjaC11c2VyIjogIj8xIiwic2VjLWZldGNoLWRlc3QiOiAiZG9jdW1lbnQiLCJyZWZlcmVyIjogbWIrIi9sb2dpbi8/bmV4dCZyZWY9ZGJsJmZsJnJlZmlkPTgiLCJhY2NlcHQtZW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSIsImFjY2VwdC1sYW5ndWFnZSI6ICJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyJ9KQogCgkJZGF0YSA9IHt9CiAKCQlnZWQgPSBwYXJzZXIoc2VzLmdldChtYisiL2xvZ2luLz9uZXh0JnJlZj1kYmwmZmwmcmVmaWQ9OCIsIGhlYWRlcnM9eyJ1c2VyLWFnZW50Ijp1YX0pLnRleHQsICJodG1sLnBhcnNlciIpCiAKCQlmbSA9IGdlZC5maW5kKCJmb3JtIix7Im1ldGhvZCI6InBvc3QifSkKIAoJCWxpc3QgPSBbImxzZCIsImphem9lc3QiLCJtX3RzIiwibGkiLCJ0cnlfbnVtYmVyIiwidW5yZWNvZ25pemVkX3RyaWVzIiwibG9naW4iLCJiaV94cndoIl0KIAoJCWZvciBpIGluIGZtLmZpbmRfYWxsKCJpbnB1dCIpOgogCgkJCWlmIGkuZ2V0KCJuYW1lIikgaW4gbGlzdDoKIAoJCQkJZGF0YS51cGRhdGUoe2kuZ2V0KCJuYW1lIik6aS5nZXQoInZhbHVlIil9KQogCgkJCWVsc2U6CiAKCQkJCWNvbnRpbnVlCiAKCQlkYXRhLnVwZGF0ZSh7ImVtYWlsIjp1c2VyLCJwYXNzIjpwYXN3fSkKIAoJCXJ1biA9IHBhcnNlcihzZXMucG9zdChtYitmbS5nZXQoImFjdGlvbiIpLCBkYXRhPWRhdGEsIGFsbG93X3JlZGlyZWN0cz1UcnVlKS50ZXh0LCAiaHRtbC5wYXJzZXIiKQogCgkJaWYgImNfdXNlciIgaW4gc2VzLmNvb2tpZXM6CiAKCQkJcHJpbnQocysiXHJ7IitrKyJvayIrcysifSIraCsiICIrdXNlcitrKyIgPjwgIitoK3Bhc3cpCiAKCQkJcHJpbnQoaCtiYXRhcykKIAoJCWVsaWYgImNoZWNrcG9pbnQiIGluIHNlcy5jb29raWVzOgogCgkJCWZvcm0gPSBydW4uZmluZCgiZm9ybSIpCiAKCQkJZHRzZyA9IGZvcm0uZmluZCgiaW5wdXQiLHsibmFtZSI6ImZiX2R0c2cifSlbInZhbHVlIl0KIAoJCQlqenN0ID0gZm9ybS5maW5kKCJpbnB1dCIseyJuYW1lIjoiamF6b2VzdCJ9KVsidmFsdWUiXQogCgkJCW5oICAgPSBmb3JtLmZpbmQoImlucHV0Iix7Im5hbWUiOiJuaCJ9KVsidmFsdWUiXQogCgkJCWRhdGFEID0geyJmYl9kdHNnIjogZHRzZywiZmJfZHRzZyI6IGR0c2csImphem9lc3QiOiBqenN0LCJqYXpvZXN0IjoganpzdCwiY2hlY2twb2ludF9kYXRhIjoiIiwic3VibWl0W0NvbnRpbnVlXSI6Ikxhbmp1dGthbiIsIm5oIjogbmh9CiAKCQkJeG54eCA9IHBhcnNlcihzZXMucG9zdChtYitmb3JtWyJhY3Rpb24iXSwgZGF0YT1kYXRhRCkudGV4dCwgImh0bWwucGFyc2VyIikKIAoJCQluZ2V3ID0gW3l5LnRleHQgZm9yIHl5IGluIHhueHguZmluZF9hbGwoIm9wdGlvbiIpXQogCgkJCXByaW50KHMrIlxyeyIraysiY3AiK3MrIn0iK2wrIiAiK3VzZXIraysiID48ICIrbCtwYXN3KQogCgkJCWZvciBvcHQgaW4gcmFuZ2UobGVuKG5nZXcpKToKIAoJCQkJcHJpbnQoIlxyIitiYWxtb25kK2wrIiAgICIrbmdld1tvcHRdKQogCgkJCWlmICIwIiBpbiBzdHIobGVuKG5nZXcpKTpwcmludCgiXHIiK2JhbG1vbmQrbCsiICAgIitoKyJUYXAgWWVzIE5paCBCb3MiKQogCgkJCXByaW50KGgrYmF0YXMpCiAKCQllbHNlOgogCgkJCXByaW50KHMrIlxyeyIrcysiZXgiK3MrIn0iK20rIiAiK3VzZXIraysiID48ICIrbStwYXN3KQogCgkJCXByaW50KGgrYmF0YXMpCiAKCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKIAoJCXRpbWUuc2xlZXAoMzEpCiAKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKIAoJb3Muc3lzdGVtKCJnaXQgcHVsbCIpCiAKCW1lbnUoKQog"))